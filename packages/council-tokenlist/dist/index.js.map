{"mappings":";;;;;;;;;;;;;;;;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,mnCAA+rC,CAAC,CAAC;;ADA7tC;;AEAA,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,49EAA6uF,CAAC,CAAC;;;;ACA3wF,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,mnCAA+rC,CAAC,CAAC;;;;ACA7tC,yBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,uuEAAy+E,CAAC,CAAC;;;AEAvgF;;AAKO,eAAe,yCAAc,CAClC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EAC8B;IAC1C,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IACD,MAAM,eAAe,GAAG,CAAA,GAAA,iDAAgB,CAAA,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,AAAC;IAEzE,MAAM,kBAAkB,GAAG,eAAe,CAAC,WAAW,EAAE,AAAC;IACzD,MAAM,mBAAmB,GAAG,eAAe,CAAC,YAAY,EAAE,AAAC;IAC3D,MAAM,iBAAiB,GAAG,eAAe,CAAC,UAAU,EAAE,AAAC;IACvD,MAAM,YAAY,GAAG,eAAe,CAAC,KAAK,EAAE,AAAC;IAE7C,MAAM,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACvE,kBAAkB;QAClB,mBAAmB;QACnB,iBAAiB;QACjB,YAAY;KACb,CAAC,AAAC;IAEH,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;yBACV,WAAW;0BACX,YAAY;YACZ,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE;mBACjC,KAAK;SACN;KACF,CAAC;CACH;;AD1CD;AEAA;;;AAMO,eAAe,yCAAiB,CACrC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EACiC;IAC7C,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IAED,MAAM,kBAAkB,GAAG,CAAA,GAAA,oDAAmB,CAAA,CAAC,OAAO,CACpD,YAAY,EACZ,QAAQ,CACT,AAAC;IAEF,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,UAAU,EAAE,AAAC;IACzD,MAAM,YAAY,GAAG,MAAM,kBAAkB,CAAC,YAAY,EAAE,AAAC;IAC7D,MAAM,gBAAgB,GAAG,MAAM,kBAAkB,CAAC,gBAAgB,EAAE,AAAC;IACrE,MAAM,aAAa,GAAG,MAAM,kBAAkB,CAAC,aAAa,EAAE,AAAC;IAC/D,MAAM,WAAW,GAAG,MAAM,kBAAkB,CAAC,aAAa,EAAE,AAAC;IAE7D,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;YACV,WAAW,EAAE,WAAW,CAAC,QAAQ,EAAE;YACnC,UAAU,EAAE,CAAA,GAAA,iCAAW,CAAA,CAAC,UAAU,CAAC;YACnC,YAAY,EAAE,YAAY,CAAC,QAAQ,EAAE;YACrC,gBAAgB,EAAE,CAAA,GAAA,iCAAW,CAAA,CAAC,gBAAgB,CAAC;YAC/C,aAAa,EAAE,aAAa,CAAC,QAAQ,EAAE;SACxC;KACF,CAAC;CACH;;;AC1CD;;AAMO,eAAe,yCAAe,CACnC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EACuB;IACnC,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IAED,MAAM,gBAAgB,GAAG,CAAA,GAAA,kDAAiB,CAAA,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,AAAC;IAE3E,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,UAAU,EAAE,AAAC;IACxD,MAAM,uBAAuB,GAAG,gBAAgB,CAAC,gBAAgB,EAAE,AAAC;IACpE,MAAM,mBAAmB,GAAG,gBAAgB,CAAC,YAAY,EAAE,AAAC;IAE5D,MAAM,CAAC,UAAU,EAAE,gBAAgB,EAAE,YAAY,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACrE,iBAAiB;QACjB,uBAAuB;QACvB,mBAAmB;KACpB,CAAC,AAAC;IAEH,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;wBACV,UAAU;YACV,gBAAgB,EAAE,gBAAgB,CAAC,QAAQ,EAAE;YAC7C,YAAY,EAAE,YAAY,CAAC,QAAQ,EAAE;SACtC;KACF,CAAC;CACH;;;ACzCD;;AAMO,eAAe,yCAAmB,CACvC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EAC2B;IACvC,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IAED,MAAM,oBAAoB,GAAG,CAAA,GAAA,sDAAqB,CAAA,CAAC,OAAO,CACxD,YAAY,EACZ,QAAQ,CACT,AAAC;IAEF,MAAM,YAAY,GAAG,oBAAoB,CAAC,KAAK,EAAE,AAAC;IAClD,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,aAAa,EAAE,AAAC;IAElE,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QAC/C,YAAY;QACZ,oBAAoB;KACrB,CAAC,AAAC;IAEH,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;mBACV,KAAK;YACL,aAAa,EAAE,aAAa,CAAC,QAAQ,EAAE;SACxC;KACF,CAAC;CACH;;;ACzCD;;;AASO,eAAe,yCAAuB,CAC3C,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EACwC;IACpD,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IACD,MAAM,wBAAwB,GAAG,CAAA,GAAA,0DAAyB,CAAA,CAAC,OAAO,CAChE,YAAY,EACZ,QAAQ,CACT,AAAC;IAEF,MAAM,YAAY,GAAG,wBAAwB,CAAC,KAAK,EAAE,AAAC;IACtD,MAAM,eAAe,GAAG,wBAAwB,CAAC,QAAQ,EAAE,AAAC;IAE5D,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QAAC,YAAY;QAAE,eAAe;KAAC,CAAC,AAAC;IAC7E,MAAM,aAAa,GAAG,CAAA,GAAA,qDAAoB,CAAA,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,AAAC;IACpE,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,AAAC;IAErD,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;mBACV,KAAK;YACL,QAAQ,EAAE,CAAA,GAAA,iCAAW,CAAA,CAAC,QAAQ,EAAE,aAAa,CAAC;SAC/C;KACF,CAAC;CACH;;;AC1CD;;AAMO,eAAe,yCAA6B,CACjD,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EACqC;IACjD,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IAED,MAAM,8BAA8B,GAAG,CAAA,GAAA,2DAA0B,CAAA,CAAC,OAAO,CACvE,YAAY,EACZ,QAAQ,CACT,AAAC;IAEF,MAAM,kBAAkB,GAAG,8BAA8B,CAAC,WAAW,EAAE,AAAC;IACxE,MAAM,mBAAmB,GAAG,8BAA8B,CAAC,YAAY,EAAE,AAAC;IAC1E,MAAM,eAAe,GAAG,8BAA8B,CAAC,QAAQ,EAAE,AAAC;IAClE,MAAM,sBAAsB,GAC1B,8BAA8B,CAAC,eAAe,EAAE,AAAC;IACnD,MAAM,kBAAkB,GAAG,8BAA8B,CAAC,WAAW,EAAE,AAAC;IACxE,MAAM,mBAAmB,GAAG,8BAA8B,CAAC,YAAY,EAAE,AAAC;IAC1E,MAAM,YAAY,GAAG,8BAA8B,CAAC,KAAK,EAAE,AAAC;IAE5D,MAAM,CACJ,WAAW,EACX,YAAY,EACZ,QAAQ,EACR,eAAe,EACf,WAAW,EACX,YAAY,EACZ,KAAK,GACN,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QACpB,kBAAkB;QAClB,mBAAmB;QACnB,eAAe;QACf,sBAAsB;QACtB,kBAAkB;QAClB,mBAAmB;QACnB,YAAY;KACb,CAAC,AAAC;IAEH,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;yBACV,WAAW;YACX,YAAY,EAAE,YAAY,CAAC,QAAQ,EAAE;sBACrC,QAAQ;YACR,eAAe,EAAE,eAAe,CAAC,QAAQ,EAAE;yBAC3C,WAAW;0BACX,YAAY;mBACZ,KAAK;SACN;KACF,CAAC;CACH;;;ACjED;;AAMO,eAAe,wCAAe,CACnC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EACuB;IACnC,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IACD,MAAM,gBAAgB,GAAG,CAAA,GAAA,kDAAiB,CAAA,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,AAAC;IAE3E,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CAAC,QAAQ,EAAE,AAAC;IAEnD,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;YACV,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE;SAC9B;KACF,CAAC;CACH;;;AC9BD;;AAKO,eAAe,yCAAe,CACnC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACpB,IAAY,EACuB;IACnC,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACjE,OAAO;KACR;IAED,MAAM,gBAAgB,GAAG,CAAA,GAAA,kDAAiB,CAAA,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,AAAC;IAE3E,MAAM,KAAK,GAAG,MAAM,gBAAgB,CAAC,KAAK,EAAE,AAAC;IAE7C,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;cACrB,IAAI;QACJ,QAAQ,EAAE,CAAC;QACX,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;mBACV,KAAK;SACN;KACF,CAAC;CACH;;;AC9BD;;AAKO,eAAe,yCAAkB,CACtC,QAAkB,EAClB,OAAe,EACf,YAAoB,EACY;IAChC,IAAI,CAAC,YAAY,IAAI,YAAY,KAAK,CAAA,GAAA,oBAAM,CAAA,CAAC,SAAS,CAAC,WAAW,EAAE;QAClE,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,YAAY,CAAC,CAAC;QACvE,OAAO;KACR;IAED,MAAM,aAAa,GAAG,CAAA,GAAA,qDAAoB,CAAA,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,AAAC;IAE3E,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,IAAI,EAAE,AAAC;IACxC,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,MAAM,EAAE,AAAC;IAC5C,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,AAAC;IAEhD,OAAO;iBACL,OAAO;QACP,OAAO,EAAE,YAAY;gBACrB,MAAM;kBACN,QAAQ;cACR,IAAI;KACL,CAAC;CACH;;;ATbM,eAAe,wCAAY,CAChC,QAAkB,EAClB,aAAgC,EAChC,IAAY,EACQ;IACpB,MAAM,WACJ,OAAO,CAAA,EACP,SAAS,EAAE,gBACT,YAAY,CAAA,cACZ,UAAU,CAAA,iBACV,aAAa,CAAA,YACb,QAAQ,CAAA,gBACR,YAAY,CAAA,gBACZ,YAAY,CAAA,0BACZ,sBAAsB,CAAA,WACtB,OAAO,CAAA,oBACP,gBAAgB,CAAA,YAChB,QAAQ,CAAA,YACR,QAAQ,CAAA,IACT,CAAA,IACF,GAAG,aAAa,AAAC;IAElB,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IACxC,MAAM,gBAAgB,GAAG,MAAM,CAAA,GAAA,yCAAkB,CAAA,CAC/C,QAAQ,EACR,OAAO,EACP,YAAY,CACb,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACvC,MAAM,cAAc,GAAG,MAAM,CAAA,GAAA,yCAAiB,CAAA,CAC5C,QAAQ,EACR,OAAO,EACP,UAAU,EACV,8BAA8B,CAC/B,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC3C,MAAM,iBAAiB,GAAG,MAAM,CAAA,GAAA,yCAAiB,CAAA,CAC/C,QAAQ,EACR,OAAO,EACP,aAAa,EACb,kCAAkC,CACnC,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IACzC,MAAM,gBAAgB,GAAG,MAAM,CAAA,GAAA,yCAAmB,CAAA,CAChD,QAAQ,EACR,OAAO,EACP,YAAY,EACZ,uBAAuB,CACxB,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IACzC,MAAM,gBAAgB,GAAG,MAAM,CAAA,GAAA,yCAAmB,CAAA,CAChD,QAAQ,EACR,OAAO,EACP,YAAY,EACZ,uBAAuB,CACxB,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACrC,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,yCAAe,CAAA,CACxC,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,6CAA6C,CAC9C,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;IACpD,MAAM,0BAA0B,GAAG,MAAM,CAAA,GAAA,yCAA6B,CAAA,CACpE,QAAQ,EACR,OAAO,EACP,sBAAsB,EACtB,kCAAkC,CACnC,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC7C,IAAI,oBAAoB,AAA2C,AAAC;IACpE,IAAI;QACF,oBAAoB,GAAG,MAAM,CAAA,GAAA,yCAAuB,CAAA,CAClD,QAAQ,EACR,OAAO,EACP,gBAAgB,EAChB,iCAAiC,CAClC,CAAC;KACH,CAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;KAC7D;IAED,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACnC,MAAM,WAAW,GAAG,MAAM,CAAA,GAAA,yCAAc,CAAA,CACtC,QAAQ,EACR,OAAO,EACP,OAAO,EACP,0BAA0B,CAC3B,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACpC,IAAI,YAAY,AAA0B,AAAC;IAC3C,IAAI;QACF,YAAY,GAAG,MAAM,CAAA,GAAA,yCAAe,CAAA,CAClC,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,kBAAkB,CACnB,CAAC;KACH,CAAC,OAAO,MAAK,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,MAAK,CAAC,CAAC;KACpD;IAED,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,MAAM,CAAA,GAAA,wCAAe,CAAA,CACxC,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,kBAAkB,CACnB,AAAC;IAEF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrB,MAAM,SAAS,GAAc;cAC3B,IAAI;QACJ,OAAO,EAAE,6BAA6B;QACtC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,OAAO,EAAE;YACP,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;SACT;QACD,MAAM,EAAE;YACN,gBAAgB;YAChB,cAAc;YACd,iBAAiB;YACjB,gBAAgB;YAChB,gBAAgB;YAChB,YAAY;YACZ,0BAA0B;YAC1B,oBAAoB;YACpB,WAAW;YACX,YAAY;YACZ,YAAY;SACb,CAAC,MAAM,CAAC,CAAC,CAAC,GAAqB,CAAC,CAAC,CAAC,CAAC;KACrC,AAAC;IAEF,OAAO,SAAS,CAAC;CAClB;;;ALjJM,MAAM,yCAAe,GAAc,CAAA,GAAA,gEAAmB,CAAA,AAAa,AAAC;AACpE,MAAM,yCAAiB,GAAsB,CAAA,GAAA,gEAAqB,CAAA,AAAC;AAGnE,MAAM,wCAAgB,GAAc,CAAA,GAAA,gEAAoB,CAAA,AAAa,AAAC;AACtE,MAAM,yCAAkB,GAAsB,CAAA,GAAA,gEAAsB,CAAA,AAAC","sources":["packages/council-tokenlist/src/index.ts","packages/council-tokenlist/src/addresses/goerli.addresses.json","packages/council-tokenlist/src/tokenlists/goerli.tokenlist.json","packages/council-tokenlist/src/addresses/mainnet.addresses.json","packages/council-tokenlist/src/tokenlists/mainnet.tokenlist.json","packages/council-tokenlist/src/getTokenList.ts","packages/council-tokenlist/src/getAirdropInfo.ts","packages/council-tokenlist/src/getCoreVotingInfo.ts","packages/council-tokenlist/src/getGscVaultInfo.ts","packages/council-tokenlist/src/getLockingVaultInfo.ts","packages/council-tokenlist/src/getOptimisticGrantsInfo.ts","packages/council-tokenlist/src/getOptimisticRewardsVaultInfo.ts","packages/council-tokenlist/src/getTimelock.ts","packages/council-tokenlist/src/getTreasuryInfo.ts","packages/council-tokenlist/src/getVotingTokenInfo.ts"],"sourcesContent":["import { TokenList } from \"@uniswap/token-lists\";\r\nimport { AddressesJsonFile } from \"src/addresses/AddressesJsonFile\";\r\nimport goerliAddressListJson from \"src/addresses/goerli.addresses.json\";\r\nimport goerliTokenListJson from \"src/tokenlists/goerli.tokenlist.json\";\r\nimport mainnetAddressListJson from \"src/addresses/mainnet.addresses.json\";\r\nimport mainnetTokenListJson from \"src/tokenlists/mainnet.tokenlist.json\";\r\n\r\n/**\r\n * Elf Council tokenlist type definitions.\r\n */\r\nimport { TokenInfo } from \"@uniswap/token-lists\";\r\n\r\n// export addresses json file definition\r\nexport type { AddressesJsonFile } from \"src/addresses/AddressesJsonFile\";\r\n\r\n// export goerli jsons\r\nexport const goerliTokenList: TokenList = goerliTokenListJson as TokenList;\r\nexport const goerliAddressList: AddressesJsonFile = goerliAddressListJson;\r\n\r\n// export mainnet jsons\r\nexport const mainnetTokenList: TokenList = mainnetTokenListJson as TokenList;\r\nexport const mainnetAddressList: AddressesJsonFile = mainnetAddressListJson;\r\n\r\nexport { getTokenList } from \"src/getTokenList\";\r\n\r\nexport type ElementGovernanceTokenInfo = TokenInfo;\r\n\r\nexport interface AirdropContractInfo extends TokenInfo {\r\n  extensions: {\r\n    rewardsRoot: string;\r\n    lockingVault: string;\r\n    expiration: string;\r\n    token: string;\r\n  };\r\n}\r\n\r\nexport interface CoreVotingContractInfo extends TokenInfo {\r\n  extensions: {\r\n    dayInBlocks: number;\r\n    baseQuorum: number;\r\n    lockDuration: number;\r\n    minProposalPower: number;\r\n    extraVoteTime: number;\r\n  };\r\n}\r\n\r\nexport interface LockingVaultInfo extends TokenInfo {\r\n  extensions: {\r\n    token: string;\r\n    staleBlockLag: number;\r\n  };\r\n}\r\n\r\nexport interface OptimisticRewardsVaultInfo extends TokenInfo {\r\n  extensions: {\r\n    pendingRoot: string;\r\n    proposalTime: number;\r\n    proposer: string;\r\n    challengePeriod: number;\r\n    rewardsRoot: string;\r\n    lockingVault: string;\r\n    token: string;\r\n  };\r\n}\r\n\r\nexport interface OptimisticsGrantsContractInfo extends TokenInfo {\r\n  extensions: {\r\n    token: string;\r\n    solvency: string;\r\n  };\r\n}\r\n\r\nexport interface VestingVaultInfo extends TokenInfo {\r\n  extensions: {\r\n    token: string;\r\n    staleBlockLag: number;\r\n  };\r\n}\r\n\r\nexport interface GSCVaultInfo extends TokenInfo {\r\n  extensions: {\r\n    coreVoting: string;\r\n    votingPowerBound: number;\r\n    idleDuration: number;\r\n  };\r\n}\r\n\r\nexport interface TimelockInfo extends TokenInfo {\r\n  extensions: {\r\n    waitTime: string;\r\n  };\r\n}\r\n\r\nexport interface TreasuryInfo extends TokenInfo {\r\n  extensions: {\r\n    owner: string;\r\n  };\r\n}\r\n\r\nexport type AnyTokenListInfo =\r\n  | TokenInfo\r\n  | ElementGovernanceTokenInfo\r\n  | AirdropContractInfo\r\n  | CoreVotingContractInfo\r\n  | LockingVaultInfo\r\n  | OptimisticRewardsVaultInfo\r\n  | OptimisticsGrantsContractInfo\r\n  | VestingVaultInfo\r\n  | GSCVaultInfo\r\n  | TimelockInfo\r\n  | TreasuryInfo;\r\n","{\r\n  \"addresses\": {\r\n    \"airdrop\": \"0xb7920477F7A39c3DffA925076857eB1585503e1B\",\r\n    \"coreVoting\": \"0x0CB8aa45068EE31e97B717b0B35e26A43884c84c\",\r\n    \"discordTier1Airdrop\": \"0x8c7a3457742bC7ae91Bec25ea9Ab5dCbEF412292\",\r\n    \"discordTier2Airdrop\": \"0x6E023DAF6D9B89491A86A4554651fBaF3b8402FE\",\r\n    \"discordTier3Airdrop\": \"0x6923F46Bfbf87E01428b8a70B1B6737a982ABcdA\",\r\n    \"elementToken\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\r\n    \"githubTier1Airdrop\": \"0x7198A8379fE0A0663A1E7020F6100F39b53bbB9e\",\r\n    \"githubTier2Airdrop\": \"0xd21A03818ffe26dD92AEeD030E8a4b920c25C1cd\",\r\n    \"githubTier3Airdrop\": \"0xd98BD503c766F2ee0Bf05A4f34dA50af5B71D051\",\r\n    \"gscCoreVoting\": \"0x600c4926c9F88beCE3533ceaAA36804d6E23F1c1\",\r\n    \"gscVault\": \"0x0A575bFA79454112c37B9Af2a6362c9c68f7d2e3\",\r\n    \"lockingVault\": \"0xb5E8AF575Ee302A24c6C7746a99D895BeF67cb5D\",\r\n    \"optimisticGrants\": \"0x092B49777CB45dc4939FBc4029ce7a116D63D29D\",\r\n    \"optimisticRewardsVault\": \"0x0000000000000000000000000000000000000000\",\r\n    \"spender\": \"0x722289C399e6f4AbCE80FaFbABC9a9876432834C\",\r\n    \"timeLock\": \"0x36687bdD319a78AB4b4347f3A7459Da235AFc4f4\",\r\n    \"treasury\": \"0xd46dDb33A33FD3D352d08cc7022Ce1f5c6ccFF1a\",\r\n    \"vestingVault\": \"0xe69D2F8DeD2924e0845118E7E467Fc97F7994ef6\"\r\n  },\r\n  \"chainId\": 5\r\n}\r\n","{\n  \"name\": \"Council goerli token list\",\n  \"logoURI\": \"https://website.com/logo.svg\",\n  \"timestamp\": \"2022-08-08T22:46:21.906Z\",\n  \"version\": {\n    \"major\": 0,\n    \"minor\": 1,\n    \"patch\": 0\n  },\n  \"tokens\": [\n    {\n      \"chainId\": 5,\n      \"address\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n      \"symbol\": \"🧝\",\n      \"decimals\": 18,\n      \"name\": \"Definitely Not Element Token\"\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x0CB8aa45068EE31e97B717b0B35e26A43884c84c\",\n      \"name\": \"Element Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"1000000.0\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"0.000000000000000001\",\n        \"extraVoteTime\": 2371040\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x600c4926c9F88beCE3533ceaAA36804d6E23F1c1\",\n      \"name\": \"Element GSC Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"0.000000000000000001\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"0.000000000000000001\",\n        \"extraVoteTime\": 32480\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xb5E8AF575Ee302A24c6C7746a99D895BeF67cb5D\",\n      \"name\": \"Element Locking Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n        \"staleBlockLag\": 30000\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xe69D2F8DeD2924e0845118E7E467Fc97F7994ef6\",\n      \"name\": \"Element Vesting Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n        \"staleBlockLag\": 20000\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x0A575bFA79454112c37B9Af2a6362c9c68f7d2e3\",\n      \"name\": \"Element Governance Steering Committee Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"coreVoting\": \"0x0CB8aa45068EE31e97B717b0B35e26A43884c84c\",\n        \"votingPowerBound\": \"100000000000000000000000\",\n        \"idleDuration\": \"120\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x092B49777CB45dc4939FBc4029ce7a116D63D29D\",\n      \"name\": \"Element Optimistic Grants Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n        \"solvency\": \"0.0\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xb7920477F7A39c3DffA925076857eB1585503e1B\",\n      \"name\": \"Element Airdrop Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"rewardsRoot\": \"0x9aafc9b1d8798b80c68d556519e69c64fbe5a4b205bbdccec12375353a1bf784\",\n        \"lockingVault\": \"0xb5E8AF575Ee302A24c6C7746a99D895BeF67cb5D\",\n        \"expiration\": \"9999999999\",\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xd46dDb33A33FD3D352d08cc7022Ce1f5c6ccFF1a\",\n      \"name\": \"Element Treasury\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"owner\": \"0xcF3b7bcBbcEFF836F81f6EAd914706E699267bca\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x36687bdD319a78AB4b4347f3A7459Da235AFc4f4\",\n      \"name\": \"Element Timelock\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"waitTime\": \"1\"\n      }\n    }\n  ]\n}","{\r\n  \"addresses\": {\r\n    \"airdrop\": \"0xd04a459FFD3A5E3C93d5cD8BB13d26a9845716c2\",\r\n    \"coreVoting\": \"0xEaCD577C3F6c44C3ffA398baaD97aE12CDCFed4a\",\r\n    \"discordTier1Airdrop\": \"0x508071cEEf3d24D94b6783c0808fe1A417DDa485\",\r\n    \"discordTier2Airdrop\": \"0x805bb52e4D9795B44C1ecd191Bd31F1D4a9C2dA5\",\r\n    \"discordTier3Airdrop\": \"0xb7726ee8d589fd3e74C0369aB8F08D5d847bC86A\",\r\n    \"elementToken\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\r\n    \"githubTier1Airdrop\": \"0x5ae69B714859A3C15281e0a227D9B8C82F03b966\",\r\n    \"githubTier2Airdrop\": \"0x63A2548f0a3795a35Ff62121E5f8C24Ada9831F8\",\r\n    \"githubTier3Airdrop\": \"0x72D3acDAd21dF959DB2C112A0a5982d03759a154\",\r\n    \"gscCoreVoting\": \"0x40309f197e7f94B555904DF0f788a3F48cF326aB\",\r\n    \"gscVault\": \"0xcA870E8aa4FCEa85b5f0c6F4209C8CBA9265B940\",\r\n    \"lockingVault\": \"0x02Bd4A3b1b95b01F2Aa61655415A5d3EAAcaafdD\",\r\n    \"optimisticGrants\": \"0x0000000000000000000000000000000000000000\",\r\n    \"optimisticRewardsVault\": \"0x0000000000000000000000000000000000000000\",\r\n    \"spender\": \"0xDa2Baf34B5717b257e52039f78d02B9C58751781\",\r\n    \"timeLock\": \"0x81758f3361A769016eae4844072FA6d7f828a651\",\r\n    \"treasury\": \"0x82eF450FB7f06E3294F2f19ed1713b255Af0f541\",\r\n    \"vestingVault\": \"0x6De73946eab234F1EE61256F10067D713aF0e37A\"\r\n  },\r\n  \"chainId\": 1\r\n}\r\n","{\n  \"name\": \"Council mainnet token list\",\n  \"logoURI\": \"https://website.com/logo.svg\",\n  \"timestamp\": \"2022-08-08T22:46:32.532Z\",\n  \"version\": {\n    \"major\": 0,\n    \"minor\": 1,\n    \"patch\": 0\n  },\n  \"tokens\": [\n    {\n      \"chainId\": 1,\n      \"address\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n      \"symbol\": \"ELFI\",\n      \"decimals\": 18,\n      \"name\": \"Element Finance\"\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0xEaCD577C3F6c44C3ffA398baaD97aE12CDCFed4a\",\n      \"name\": \"Element Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"1100000.0\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"55000.0\",\n        \"extraVoteTime\": 32480\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x40309f197e7f94B555904DF0f788a3F48cF326aB\",\n      \"name\": \"Element GSC Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"0.000000000000000001\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"0.000000000000000001\",\n        \"extraVoteTime\": 32480\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x02Bd4A3b1b95b01F2Aa61655415A5d3EAAcaafdD\",\n      \"name\": \"Element Locking Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n        \"staleBlockLag\": 200000\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x6De73946eab234F1EE61256F10067D713aF0e37A\",\n      \"name\": \"Element Vesting Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n        \"staleBlockLag\": 200000\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0xcA870E8aa4FCEa85b5f0c6F4209C8CBA9265B940\",\n      \"name\": \"Element Governance Steering Committee Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"coreVoting\": \"0xEaCD577C3F6c44C3ffA398baaD97aE12CDCFed4a\",\n        \"votingPowerBound\": \"110000000000000000000000\",\n        \"idleDuration\": \"345600\"\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0xd04a459FFD3A5E3C93d5cD8BB13d26a9845716c2\",\n      \"name\": \"Element Airdrop Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"rewardsRoot\": \"0x5868b38fb60678b88b07721f03bc9bfd5be6b4f17829f5703e3556b31f4073c6\",\n        \"lockingVault\": \"0x02Bd4A3b1b95b01F2Aa61655415A5d3EAAcaafdD\",\n        \"expiration\": \"1680220799\",\n        \"token\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\"\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x82eF450FB7f06E3294F2f19ed1713b255Af0f541\",\n      \"name\": \"Element Treasury\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"owner\": \"0x81758f3361A769016eae4844072FA6d7f828a651\"\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x81758f3361A769016eae4844072FA6d7f828a651\",\n      \"name\": \"Element Timelock\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"waitTime\": \"604800\"\n      }\n    }\n  ]\n}","import { TreasuryInfo } from \"./types\";\r\nimport { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { TokenInfo, TokenList } from \"@uniswap/token-lists\";\r\nimport { AddressesJsonFile } from \"src/addresses/AddressesJsonFile\";\r\nimport { getAirdropInfo } from \"src/getAirdropInfo\";\r\nimport { getCoreVotingInfo } from \"src/getCoreVotingInfo\";\r\nimport { getGscVaultInfo } from \"src/getGscVaultInfo\";\r\nimport { getLockingVaultInfo } from \"src/getLockingVaultInfo\";\r\nimport { getOptimisticGrantsInfo } from \"src/getOptimisticGrantsInfo\";\r\nimport { getOptimisticRewardsVaultInfo } from \"src/getOptimisticRewardsVaultInfo\";\r\nimport { getTimelockInfo } from \"src/getTimelock\";\r\nimport { getTreasuryInfo } from \"src/getTreasuryInfo\";\r\nimport { getVotingTokenInfo } from \"src/getVotingTokenInfo\";\r\nimport { OptimisticsGrantsContractInfo } from \"src/types\";\r\n\r\nexport async function getTokenList(\r\n  provider: Provider,\r\n  addressesJson: AddressesJsonFile,\r\n  name: string,\r\n): Promise<TokenList> {\r\n  const {\r\n    chainId,\r\n    addresses: {\r\n      elementToken,\r\n      coreVoting,\r\n      gscCoreVoting,\r\n      timeLock,\r\n      lockingVault,\r\n      vestingVault,\r\n      optimisticRewardsVault,\r\n      airdrop,\r\n      optimisticGrants,\r\n      treasury,\r\n      gscVault,\r\n    },\r\n  } = addressesJson;\r\n\r\n  console.log(`${name} - ${chainId}`);\r\n  console.log(\"fetching voting token...\");\r\n  const elementTokenInfo = await getVotingTokenInfo(\r\n    provider,\r\n    chainId,\r\n    elementToken,\r\n  );\r\n\r\n  console.log(\"fetching core voting...\");\r\n  const coreVotingInfo = await getCoreVotingInfo(\r\n    provider,\r\n    chainId,\r\n    coreVoting,\r\n    \"Element Core Voting Contract\",\r\n  );\r\n\r\n  console.log(\"fetching GSC core voting...\");\r\n  const gscCoreVotingInfo = await getCoreVotingInfo(\r\n    provider,\r\n    chainId,\r\n    gscCoreVoting,\r\n    \"Element GSC Core Voting Contract\",\r\n  );\r\n\r\n  console.log(\"fetching locking vault...\");\r\n  const lockingVaultInfo = await getLockingVaultInfo(\r\n    provider,\r\n    chainId,\r\n    lockingVault,\r\n    \"Element Locking Vault\",\r\n  );\r\n\r\n  console.log(\"fetching vesting vault...\");\r\n  const vestingVaultInfo = await getLockingVaultInfo(\r\n    provider,\r\n    chainId,\r\n    vestingVault,\r\n    \"Element Vesting Vault\",\r\n  );\r\n\r\n  console.log(\"fetching gsc vault...\");\r\n  const gscVaultInfo = await getGscVaultInfo(\r\n    provider,\r\n    chainId,\r\n    gscVault,\r\n    \"Element Governance Steering Committee Vault\",\r\n  );\r\n\r\n  console.log(\"fetching optimistic rewards vault...\");\r\n  const optimisticRewardsVaultInfo = await getOptimisticRewardsVaultInfo(\r\n    provider,\r\n    chainId,\r\n    optimisticRewardsVault,\r\n    \"Element Optimistic Rewards Vault\",\r\n  );\r\n\r\n  console.log(\"fetching optimistic grants...\");\r\n  let optimisticGrantsInfo: OptimisticsGrantsContractInfo | undefined;\r\n  try {\r\n    optimisticGrantsInfo = await getOptimisticGrantsInfo(\r\n      provider,\r\n      chainId,\r\n      optimisticGrants,\r\n      \"Element Optimistic Grants Vault\",\r\n    );\r\n  } catch (error) {\r\n    console.log(\"error fetching optimistic grants info\", error);\r\n  }\r\n\r\n  console.log(\"fetching airdrop...\");\r\n  const airdropInfo = await getAirdropInfo(\r\n    provider,\r\n    chainId,\r\n    airdrop,\r\n    \"Element Airdrop Contract\",\r\n  );\r\n\r\n  console.log(\"fetching treasury...\");\r\n  let treasuryInfo: TreasuryInfo | undefined;\r\n  try {\r\n    treasuryInfo = await getTreasuryInfo(\r\n      provider,\r\n      chainId,\r\n      treasury,\r\n      \"Element Treasury\",\r\n    );\r\n  } catch (error) {\r\n    console.log(\"error fetching treasury info\", error);\r\n  }\r\n\r\n  console.log(\"fetching timelock...\");\r\n  const timelockInfo = await getTimelockInfo(\r\n    provider,\r\n    chainId,\r\n    timeLock,\r\n    \"Element Timelock\",\r\n  );\r\n\r\n  console.log(\"done!\");\r\n  const tokenList: TokenList = {\r\n    name,\r\n    logoURI: \"https://website.com/logo.svg\",\r\n    timestamp: new Date().toISOString(),\r\n    version: {\r\n      major: 0,\r\n      minor: 1,\r\n      patch: 0,\r\n    },\r\n    tokens: [\r\n      elementTokenInfo,\r\n      coreVotingInfo,\r\n      gscCoreVotingInfo,\r\n      lockingVaultInfo,\r\n      vestingVaultInfo,\r\n      gscVaultInfo,\r\n      optimisticRewardsVaultInfo,\r\n      optimisticGrantsInfo,\r\n      airdropInfo,\r\n      treasuryInfo,\r\n      timelockInfo,\r\n    ].filter((t): t is TokenInfo => !!t),\r\n  };\r\n\r\n  return tokenList;\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { Airdrop__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\nimport { AirdropContractInfo } from \"src/types\";\r\n\r\nexport async function getAirdropInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<AirdropContractInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n  const airdropContract = Airdrop__factory.connect(tokenAddress, provider);\r\n\r\n  const rewardsRootPromise = airdropContract.rewardsRoot();\r\n  const lockingVaultPromise = airdropContract.lockingVault();\r\n  const expirationPromise = airdropContract.expiration();\r\n  const tokenPromise = airdropContract.token();\r\n\r\n  const [rewardsRoot, lockingVault, expiration, token] = await Promise.all([\r\n    rewardsRootPromise,\r\n    lockingVaultPromise,\r\n    expirationPromise,\r\n    tokenPromise,\r\n  ]);\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      rewardsRoot,\r\n      lockingVault,\r\n      expiration: expiration.toString(),\r\n      token,\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { CoreVoting__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\nimport { CoreVotingContractInfo } from \"src/types\";\r\nimport { formatEther } from \"ethers/lib/utils\";\r\n\r\nexport async function getCoreVotingInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<CoreVotingContractInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n\r\n  const coreVotingContract = CoreVoting__factory.connect(\r\n    tokenAddress,\r\n    provider,\r\n  );\r\n\r\n  const baseQuorum = await coreVotingContract.baseQuorum();\r\n  const lockDuration = await coreVotingContract.lockDuration();\r\n  const minProposalPower = await coreVotingContract.minProposalPower();\r\n  const extraVoteTime = await coreVotingContract.extraVoteTime();\r\n  const dayInBlocks = await coreVotingContract.DAY_IN_BLOCKS();\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      dayInBlocks: dayInBlocks.toNumber(),\r\n      baseQuorum: formatEther(baseQuorum),\r\n      lockDuration: lockDuration.toNumber(),\r\n      minProposalPower: formatEther(minProposalPower),\r\n      extraVoteTime: extraVoteTime.toNumber(),\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { GSCVault__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { GSCVaultInfo } from \"src/types\";\r\n\r\nexport async function getGscVaultInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<GSCVaultInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n\r\n  const gscVaultContract = GSCVault__factory.connect(tokenAddress, provider);\r\n\r\n  const coreVotingPromise = gscVaultContract.coreVoting();\r\n  const votingPowerBoundPromise = gscVaultContract.votingPowerBound();\r\n  const idleDurationPromise = gscVaultContract.idleDuration();\r\n\r\n  const [coreVoting, votingPowerBound, idleDuration] = await Promise.all([\r\n    coreVotingPromise,\r\n    votingPowerBoundPromise,\r\n    idleDurationPromise,\r\n  ]);\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      coreVoting,\r\n      votingPowerBound: votingPowerBound.toString(),\r\n      idleDuration: idleDuration.toString(),\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { LockingVault__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { LockingVaultInfo } from \"src/types\";\r\n\r\nexport async function getLockingVaultInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<LockingVaultInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n\r\n  const lockingVaultContract = LockingVault__factory.connect(\r\n    tokenAddress,\r\n    provider,\r\n  );\r\n\r\n  const tokenPromise = lockingVaultContract.token();\r\n  const staleBlockLagPromise = lockingVaultContract.staleBlockLag();\r\n\r\n  const [token, staleBlockLag] = await Promise.all([\r\n    tokenPromise,\r\n    staleBlockLagPromise,\r\n  ]);\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      token,\r\n      staleBlockLag: staleBlockLag.toNumber(),\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport {\r\n  ERC20Permit__factory,\r\n  OptimisticGrants__factory,\r\n} from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\nimport { OptimisticsGrantsContractInfo } from \"src/types\";\r\nimport { formatUnits } from \"ethers/lib/utils\";\r\n\r\nexport async function getOptimisticGrantsInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<OptimisticsGrantsContractInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n  const optimisticGrantsContract = OptimisticGrants__factory.connect(\r\n    tokenAddress,\r\n    provider,\r\n  );\r\n\r\n  const tokenPromise = optimisticGrantsContract.token();\r\n  const solvencyPromise = optimisticGrantsContract.solvency();\r\n\r\n  const [token, solvency] = await Promise.all([tokenPromise, solvencyPromise]);\r\n  const tokenContract = ERC20Permit__factory.connect(token, provider);\r\n  const tokenDecimals = await tokenContract.decimals();\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      token,\r\n      solvency: formatUnits(solvency, tokenDecimals),\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { OptimisticRewards__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { OptimisticRewardsVaultInfo } from \"src/types\";\r\n\r\nexport async function getOptimisticRewardsVaultInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<OptimisticRewardsVaultInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n\r\n  const optimisticRewardsVaultContract = OptimisticRewards__factory.connect(\r\n    tokenAddress,\r\n    provider,\r\n  );\r\n\r\n  const pendingRootPromise = optimisticRewardsVaultContract.pendingRoot();\r\n  const proposalTimePromise = optimisticRewardsVaultContract.proposalTime();\r\n  const proposerPromise = optimisticRewardsVaultContract.proposer();\r\n  const challengePeriodPromise =\r\n    optimisticRewardsVaultContract.challengePeriod();\r\n  const rewardsRootPromise = optimisticRewardsVaultContract.rewardsRoot();\r\n  const lockingVaultPromise = optimisticRewardsVaultContract.lockingVault();\r\n  const tokenPromise = optimisticRewardsVaultContract.token();\r\n\r\n  const [\r\n    pendingRoot,\r\n    proposalTime,\r\n    proposer,\r\n    challengePeriod,\r\n    rewardsRoot,\r\n    lockingVault,\r\n    token,\r\n  ] = await Promise.all([\r\n    pendingRootPromise,\r\n    proposalTimePromise,\r\n    proposerPromise,\r\n    challengePeriodPromise,\r\n    rewardsRootPromise,\r\n    lockingVaultPromise,\r\n    tokenPromise,\r\n  ]);\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      pendingRoot,\r\n      proposalTime: proposalTime.toNumber(),\r\n      proposer,\r\n      challengePeriod: challengePeriod.toNumber(),\r\n      rewardsRoot,\r\n      lockingVault,\r\n      token,\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { Timelock__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport { TimelockInfo } from \"src/types\";\r\n\r\nexport async function getTimelockInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<TimelockInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n  const timelockContract = Timelock__factory.connect(tokenAddress, provider);\r\n\r\n  const waitTime = await timelockContract.waitTime();\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      waitTime: waitTime.toString(),\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { Treasury__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\nimport { TreasuryInfo } from \"src/types\";\r\n\r\nexport async function getTreasuryInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n  name: string,\r\n): Promise<TreasuryInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\r\n    return;\r\n  }\r\n\r\n  const treasuryContract = Treasury__factory.connect(tokenAddress, provider);\r\n\r\n  const owner = await treasuryContract.owner();\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    name,\r\n    decimals: 0,\r\n    symbol: \"\",\r\n    extensions: {\r\n      owner,\r\n    },\r\n  };\r\n}\r\n","import { Provider } from \"@ethersproject/abstract-provider\";\r\nimport { TokenInfo } from \"@uniswap/token-lists\";\r\nimport { ERC20Permit__factory } from \"@elementfi/council-typechain\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport async function getVotingTokenInfo(\r\n  provider: Provider,\r\n  chainId: number,\r\n  tokenAddress: string,\r\n): Promise<TokenInfo | undefined> {\r\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\r\n    console.error(\"Invavlid Token Address for Voting Token\", tokenAddress);\r\n    return;\r\n  }\r\n\r\n  const tokenContract = ERC20Permit__factory.connect(tokenAddress, provider);\r\n\r\n  const name = await tokenContract.name();\r\n  const symbol = await tokenContract.symbol();\r\n  const decimals = await tokenContract.decimals();\r\n\r\n  return {\r\n    chainId,\r\n    address: tokenAddress,\r\n    symbol,\r\n    decimals,\r\n    name,\r\n  };\r\n}\r\n"],"names":[],"version":3,"file":"index.js.map"}