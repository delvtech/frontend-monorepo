{"mappings":"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","sources":["packages/council-tokenlist/src/index.ts","packages/council-tokenlist/src/addresses/goerli.addresses.json","packages/council-tokenlist/src/tokenlists/goerli.tokenlist.json","packages/council-tokenlist/src/addresses/mainnet.addresses.json","packages/council-tokenlist/src/tokenlists/mainnet.tokenlist.json","packages/council-tokenlist/src/getTokenList.ts","packages/council-tokenlist/src/getAirdropInfo.ts","packages/council-tokenlist/src/getCoreVotingInfo.ts","packages/council-tokenlist/src/getGscVaultInfo.ts","packages/council-tokenlist/src/getLockingVaultInfo.ts","packages/council-tokenlist/src/getOptimisticGrantsInfo.ts","packages/council-tokenlist/src/getOptimisticRewardsVaultInfo.ts","packages/council-tokenlist/src/getTimelock.ts","packages/council-tokenlist/src/getTreasuryInfo.ts","packages/council-tokenlist/src/getVotingTokenInfo.ts"],"sourcesContent":["import { TokenList } from \"@uniswap/token-lists\";\nimport { AddressesJsonFile } from \"src/addresses/AddressesJsonFile\";\nimport goerliAddressListJson from \"src/addresses/goerli.addresses.json\";\nimport goerliTokenListJson from \"src/tokenlists/goerli.tokenlist.json\";\nimport mainnetAddressListJson from \"src/addresses/mainnet.addresses.json\";\nimport mainnetTokenListJson from \"src/tokenlists/mainnet.tokenlist.json\";\n\n/**\n * Elf Council tokenlist type definitions.\n */\nimport { TokenInfo } from \"@uniswap/token-lists\";\n\n// export addresses json file definition\nexport type { AddressesJsonFile } from \"src/addresses/AddressesJsonFile\";\n\n// export goerli jsons\nexport const goerliTokenList: TokenList = goerliTokenListJson as TokenList;\nexport const goerliAddressList: AddressesJsonFile = goerliAddressListJson;\n\n// export mainnet jsons\nexport const mainnetTokenList: TokenList = mainnetTokenListJson as TokenList;\nexport const mainnetAddressList: AddressesJsonFile = mainnetAddressListJson;\n\nexport { getTokenList } from \"src/getTokenList\";\n\nexport type ElementGovernanceTokenInfo = TokenInfo;\n\nexport interface AirdropContractInfo extends TokenInfo {\n  extensions: {\n    rewardsRoot: string;\n    lockingVault: string;\n    expiration: string;\n    token: string;\n  };\n}\n\nexport interface CoreVotingContractInfo extends TokenInfo {\n  extensions: {\n    dayInBlocks: number;\n    baseQuorum: number;\n    lockDuration: number;\n    minProposalPower: number;\n    extraVoteTime: number;\n  };\n}\n\nexport interface LockingVaultInfo extends TokenInfo {\n  extensions: {\n    token: string;\n    staleBlockLag: number;\n  };\n}\n\nexport interface OptimisticRewardsVaultInfo extends TokenInfo {\n  extensions: {\n    pendingRoot: string;\n    proposalTime: number;\n    proposer: string;\n    challengePeriod: number;\n    rewardsRoot: string;\n    lockingVault: string;\n    token: string;\n  };\n}\n\nexport interface OptimisticsGrantsContractInfo extends TokenInfo {\n  extensions: {\n    token: string;\n    solvency: string;\n  };\n}\n\nexport interface VestingVaultInfo extends TokenInfo {\n  extensions: {\n    token: string;\n    staleBlockLag: number;\n  };\n}\n\nexport interface GSCVaultInfo extends TokenInfo {\n  extensions: {\n    coreVoting: string;\n    votingPowerBound: number;\n    idleDuration: number;\n  };\n}\n\nexport interface TimelockInfo extends TokenInfo {\n  extensions: {\n    waitTime: string;\n  };\n}\n\nexport interface TreasuryInfo extends TokenInfo {\n  extensions: {\n    owner: string;\n  };\n}\n\nexport type AnyTokenListInfo =\n  | TokenInfo\n  | ElementGovernanceTokenInfo\n  | AirdropContractInfo\n  | CoreVotingContractInfo\n  | LockingVaultInfo\n  | OptimisticRewardsVaultInfo\n  | OptimisticsGrantsContractInfo\n  | VestingVaultInfo\n  | GSCVaultInfo\n  | TimelockInfo\n  | TreasuryInfo;\n","{\n  \"addresses\": {\n    \"airdrop\": \"0xb7920477F7A39c3DffA925076857eB1585503e1B\",\n    \"coreVoting\": \"0x0CB8aa45068EE31e97B717b0B35e26A43884c84c\",\n    \"elementToken\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n    \"gscCoreVoting\": \"0x600c4926c9F88beCE3533ceaAA36804d6E23F1c1\",\n    \"gscVault\": \"0x0A575bFA79454112c37B9Af2a6362c9c68f7d2e3\",\n    \"lockingVault\": \"0xb5E8AF575Ee302A24c6C7746a99D895BeF67cb5D\",\n    \"optimisticGrants\": \"0x092B49777CB45dc4939FBc4029ce7a116D63D29D\",\n    \"optimisticRewardsVault\": \"0x0000000000000000000000000000000000000000\",\n    \"spender\": \"0x722289C399e6f4AbCE80FaFbABC9a9876432834C\",\n    \"timeLock\": \"0x36687bdD319a78AB4b4347f3A7459Da235AFc4f4\",\n    \"treasury\": \"0xd46dDb33A33FD3D352d08cc7022Ce1f5c6ccFF1a\",\n    \"vestingVault\": \"0xe69D2F8DeD2924e0845118E7E467Fc97F7994ef6\"\n  },\n  \"chainId\": 5\n}\n","{\n  \"name\": \"Council goerli token list\",\n  \"logoURI\": \"https://element.fi/logo.svg\",\n  \"timestamp\": \"2022-07-13T01:34:59.250Z\",\n  \"version\": {\n    \"major\": 0,\n    \"minor\": 1,\n    \"patch\": 0\n  },\n  \"tokens\": [\n    {\n      \"chainId\": 5,\n      \"address\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n      \"symbol\": \"🧝\",\n      \"decimals\": 18,\n      \"name\": \"Definitely Not Element Token\"\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x0CB8aa45068EE31e97B717b0B35e26A43884c84c\",\n      \"name\": \"Element Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"1000000.0\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"0.000000000000000001\",\n        \"extraVoteTime\": 2371040\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x600c4926c9F88beCE3533ceaAA36804d6E23F1c1\",\n      \"name\": \"Element GSC Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"0.000000000000000001\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"0.000000000000000001\",\n        \"extraVoteTime\": 32480\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xb5E8AF575Ee302A24c6C7746a99D895BeF67cb5D\",\n      \"name\": \"Element Locking Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n        \"staleBlockLag\": 30000\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xe69D2F8DeD2924e0845118E7E467Fc97F7994ef6\",\n      \"name\": \"Element Vesting Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n        \"staleBlockLag\": 20000\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x0A575bFA79454112c37B9Af2a6362c9c68f7d2e3\",\n      \"name\": \"Element Governance Steering Committee Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"coreVoting\": \"0x0CB8aa45068EE31e97B717b0B35e26A43884c84c\",\n        \"votingPowerBound\": \"100000000000000000000000\",\n        \"idleDuration\": \"120\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x092B49777CB45dc4939FBc4029ce7a116D63D29D\",\n      \"name\": \"Element Optimistic Grants Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\",\n        \"solvency\": \"0.0\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xb7920477F7A39c3DffA925076857eB1585503e1B\",\n      \"name\": \"Element Airdrop Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"rewardsRoot\": \"0x9aafc9b1d8798b80c68d556519e69c64fbe5a4b205bbdccec12375353a1bf784\",\n        \"lockingVault\": \"0xb5E8AF575Ee302A24c6C7746a99D895BeF67cb5D\",\n        \"expiration\": \"9999999999\",\n        \"token\": \"0x2b1a91De5B9C3Ad6439eeAeD0E481F8cf6E22601\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0xd46dDb33A33FD3D352d08cc7022Ce1f5c6ccFF1a\",\n      \"name\": \"Element Treasury\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"owner\": \"0xcF3b7bcBbcEFF836F81f6EAd914706E699267bca\"\n      }\n    },\n    {\n      \"chainId\": 5,\n      \"address\": \"0x36687bdD319a78AB4b4347f3A7459Da235AFc4f4\",\n      \"name\": \"Element Timelock\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"waitTime\": \"1\"\n      }\n    }\n  ]\n}","{\n  \"addresses\": {\n    \"airdrop\": \"0xd04a459FFD3A5E3C93d5cD8BB13d26a9845716c2\",\n    \"coreVoting\": \"0xEaCD577C3F6c44C3ffA398baaD97aE12CDCFed4a\",\n    \"elementToken\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n    \"gscCoreVoting\": \"0x40309f197e7f94B555904DF0f788a3F48cF326aB\",\n    \"gscVault\": \"0xcA870E8aa4FCEa85b5f0c6F4209C8CBA9265B940\",\n    \"lockingVault\": \"0x02Bd4A3b1b95b01F2Aa61655415A5d3EAAcaafdD\",\n    \"optimisticGrants\": \"0x0000000000000000000000000000000000000000\",\n    \"optimisticRewardsVault\": \"0x0000000000000000000000000000000000000000\",\n    \"spender\": \"0xDa2Baf34B5717b257e52039f78d02B9C58751781\",\n    \"timeLock\": \"0x81758f3361A769016eae4844072FA6d7f828a651\",\n    \"treasury\": \"0x82eF450FB7f06E3294F2f19ed1713b255Af0f541\",\n    \"vestingVault\": \"0x6De73946eab234F1EE61256F10067D713aF0e37A\"\n  },\n  \"chainId\": 1\n}\n","{\n  \"name\": \"Council mainnet token list\",\n  \"logoURI\": \"https://element.fi/logo.svg\",\n  \"timestamp\": \"2022-07-13T01:35:08.473Z\",\n  \"version\": {\n    \"major\": 0,\n    \"minor\": 1,\n    \"patch\": 0\n  },\n  \"tokens\": [\n    {\n      \"chainId\": 1,\n      \"address\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n      \"symbol\": \"ELFI\",\n      \"decimals\": 18,\n      \"name\": \"Element Finance\"\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0xEaCD577C3F6c44C3ffA398baaD97aE12CDCFed4a\",\n      \"name\": \"Element Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"1100000.0\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"55000.0\",\n        \"extraVoteTime\": 32480\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x40309f197e7f94B555904DF0f788a3F48cF326aB\",\n      \"name\": \"Element GSC Core Voting Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"dayInBlocks\": 6496,\n        \"baseQuorum\": \"0.000000000000000001\",\n        \"lockDuration\": 19488,\n        \"minProposalPower\": \"0.000000000000000001\",\n        \"extraVoteTime\": 32480\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x02Bd4A3b1b95b01F2Aa61655415A5d3EAAcaafdD\",\n      \"name\": \"Element Locking Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n        \"staleBlockLag\": 200000\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x6De73946eab234F1EE61256F10067D713aF0e37A\",\n      \"name\": \"Element Vesting Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"token\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\",\n        \"staleBlockLag\": 200000\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0xcA870E8aa4FCEa85b5f0c6F4209C8CBA9265B940\",\n      \"name\": \"Element Governance Steering Committee Vault\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"coreVoting\": \"0xEaCD577C3F6c44C3ffA398baaD97aE12CDCFed4a\",\n        \"votingPowerBound\": \"110000000000000000000000\",\n        \"idleDuration\": \"345600\"\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0xd04a459FFD3A5E3C93d5cD8BB13d26a9845716c2\",\n      \"name\": \"Element Airdrop Contract\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"rewardsRoot\": \"0x5868b38fb60678b88b07721f03bc9bfd5be6b4f17829f5703e3556b31f4073c6\",\n        \"lockingVault\": \"0x02Bd4A3b1b95b01F2Aa61655415A5d3EAAcaafdD\",\n        \"expiration\": \"1680220799\",\n        \"token\": \"0x5c6D51ecBA4D8E4F20373e3ce96a62342B125D6d\"\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x82eF450FB7f06E3294F2f19ed1713b255Af0f541\",\n      \"name\": \"Element Treasury\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"owner\": \"0x81758f3361A769016eae4844072FA6d7f828a651\"\n      }\n    },\n    {\n      \"chainId\": 1,\n      \"address\": \"0x81758f3361A769016eae4844072FA6d7f828a651\",\n      \"name\": \"Element Timelock\",\n      \"decimals\": 0,\n      \"symbol\": \"\",\n      \"extensions\": {\n        \"waitTime\": \"604800\"\n      }\n    }\n  ]\n}","import { TreasuryInfo } from \"./types\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { TokenInfo, TokenList } from \"@uniswap/token-lists\";\nimport { AddressesJsonFile } from \"src/addresses/AddressesJsonFile\";\nimport { getAirdropInfo } from \"src/getAirdropInfo\";\nimport { getCoreVotingInfo } from \"src/getCoreVotingInfo\";\nimport { getGscVaultInfo } from \"src/getGscVaultInfo\";\nimport { getLockingVaultInfo } from \"src/getLockingVaultInfo\";\nimport { getOptimisticGrantsInfo } from \"src/getOptimisticGrantsInfo\";\nimport { getOptimisticRewardsVaultInfo } from \"src/getOptimisticRewardsVaultInfo\";\nimport { getTimelockInfo } from \"src/getTimelock\";\nimport { getTreasuryInfo } from \"src/getTreasuryInfo\";\nimport { getVotingTokenInfo } from \"src/getVotingTokenInfo\";\nimport { OptimisticsGrantsContractInfo } from \"src/types\";\n\nexport async function getTokenList(\n  provider: Provider,\n  addressesJson: AddressesJsonFile,\n  name: string,\n): Promise<TokenList> {\n  const {\n    chainId,\n    addresses: {\n      elementToken,\n      coreVoting,\n      gscCoreVoting,\n      timeLock,\n      lockingVault,\n      vestingVault,\n      optimisticRewardsVault,\n      airdrop,\n      optimisticGrants,\n      treasury,\n      gscVault,\n    },\n  } = addressesJson;\n\n  console.log(`${name} - ${chainId}`);\n  console.log('fetching voting token...');\n  const elementTokenInfo = await getVotingTokenInfo(\n    provider,\n    chainId,\n    elementToken,\n  );\n\n  console.log('fetching core voting...');\n  const coreVotingInfo = await getCoreVotingInfo(\n    provider,\n    chainId,\n    coreVoting,\n    \"Element Core Voting Contract\",\n  );\n\n  console.log('fetching GSC core voting...');\n  const gscCoreVotingInfo = await getCoreVotingInfo(\n    provider,\n    chainId,\n    gscCoreVoting,\n    \"Element GSC Core Voting Contract\",\n  );\n\n  console.log('fetching locking vault...');\n  const lockingVaultInfo = await getLockingVaultInfo(\n    provider,\n    chainId,\n    lockingVault,\n    \"Element Locking Vault\",\n  );\n\n  console.log('fetching vesting vault...');\n  const vestingVaultInfo = await getLockingVaultInfo(\n    provider,\n    chainId,\n    vestingVault,\n    \"Element Vesting Vault\",\n  );\n\n  console.log('fetching gsc vault...');\n  const gscVaultInfo = await getGscVaultInfo(\n    provider,\n    chainId,\n    gscVault,\n    \"Element Governance Steering Committee Vault\",\n  );\n\n  console.log('fetching optimistic rewards vault...');\n  const optimisticRewardsVaultInfo = await getOptimisticRewardsVaultInfo(\n    provider,\n    chainId,\n    optimisticRewardsVault,\n    \"Element Optimistic Rewards Vault\",\n  );\n\n  console.log('fetching optimistic grants...');\n  let optimisticGrantsInfo: OptimisticsGrantsContractInfo | undefined;\n  try {\n    optimisticGrantsInfo = await getOptimisticGrantsInfo(\n      provider,\n      chainId,\n      optimisticGrants,\n      \"Element Optimistic Grants Vault\",\n    );\n  } catch (error) {\n    console.log(\"error fetching optimistic grants info\", error);\n  }\n\n  console.log('fetching airdrop...');\n  const airdropInfo = await getAirdropInfo(\n    provider,\n    chainId,\n    airdrop,\n    \"Element Airdrop Contract\",\n  );\n\n  console.log('fetching treasury...');\n  let treasuryInfo: TreasuryInfo | undefined;\n  try {\n    treasuryInfo = await getTreasuryInfo(\n      provider,\n      chainId,\n      treasury,\n      \"Element Treasury\",\n    );\n  } catch (error) {\n    console.log(\"error fetching treasury info\", error);\n  }\n\n  console.log('fetching timelock...');\n  const timelockInfo = await getTimelockInfo(\n    provider,\n    chainId,\n    timeLock,\n    \"Element Timelock\",\n  );\n\n  console.log('done!');\n  const tokenList: TokenList = {\n    name,\n    logoURI: \"https://element.fi/logo.svg\",\n    timestamp: new Date().toISOString(),\n    version: {\n      major: 0,\n      minor: 1,\n      patch: 0,\n    },\n    tokens: [\n      elementTokenInfo,\n      coreVotingInfo,\n      gscCoreVotingInfo,\n      lockingVaultInfo,\n      vestingVaultInfo,\n      gscVaultInfo,\n      optimisticRewardsVaultInfo,\n      optimisticGrantsInfo,\n      airdropInfo,\n      treasuryInfo,\n      timelockInfo,\n    ].filter((t): t is TokenInfo => !!t),\n  };\n\n  return tokenList;\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { Airdrop__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\nimport { AirdropContractInfo } from \"src/types\";\n\nexport async function getAirdropInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<AirdropContractInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n  const airdropContract = Airdrop__factory.connect(tokenAddress, provider);\n\n  const rewardsRootPromise = airdropContract.rewardsRoot();\n  const lockingVaultPromise = airdropContract.lockingVault();\n  const expirationPromise = airdropContract.expiration();\n  const tokenPromise = airdropContract.token();\n\n  const [rewardsRoot, lockingVault, expiration, token] = await Promise.all([\n    rewardsRootPromise,\n    lockingVaultPromise,\n    expirationPromise,\n    tokenPromise,\n  ]);\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      rewardsRoot,\n      lockingVault,\n      expiration: expiration.toString(),\n      token,\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { CoreVoting__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\nimport { CoreVotingContractInfo } from \"src/types\";\nimport { formatEther } from \"ethers/lib/utils\";\n\nexport async function getCoreVotingInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<CoreVotingContractInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n\n  const coreVotingContract = CoreVoting__factory.connect(\n    tokenAddress,\n    provider,\n  );\n\n  const baseQuorum = await coreVotingContract.baseQuorum();\n  const lockDuration = await coreVotingContract.lockDuration();\n  const minProposalPower = await coreVotingContract.minProposalPower();\n  const extraVoteTime = await coreVotingContract.extraVoteTime();\n  const dayInBlocks = await coreVotingContract.DAY_IN_BLOCKS();\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      dayInBlocks: dayInBlocks.toNumber(),\n      baseQuorum: formatEther(baseQuorum),\n      lockDuration: lockDuration.toNumber(),\n      minProposalPower: formatEther(minProposalPower),\n      extraVoteTime: extraVoteTime.toNumber(),\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { GSCVault__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\n\nimport { GSCVaultInfo } from \"src/types\";\n\nexport async function getGscVaultInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<GSCVaultInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n\n  const gscVaultContract = GSCVault__factory.connect(tokenAddress, provider);\n\n  const coreVotingPromise = gscVaultContract.coreVoting();\n  const votingPowerBoundPromise = gscVaultContract.votingPowerBound();\n  const idleDurationPromise = gscVaultContract.idleDuration();\n\n  const [coreVoting, votingPowerBound, idleDuration] = await Promise.all([\n    coreVotingPromise,\n    votingPowerBoundPromise,\n    idleDurationPromise,\n  ]);\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      coreVoting,\n      votingPowerBound: votingPowerBound.toString(),\n      idleDuration: idleDuration.toString(),\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { LockingVault__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\n\nimport { LockingVaultInfo } from \"src/types\";\n\nexport async function getLockingVaultInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<LockingVaultInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n\n  const lockingVaultContract = LockingVault__factory.connect(\n    tokenAddress,\n    provider,\n  );\n\n  const tokenPromise = lockingVaultContract.token();\n  const staleBlockLagPromise = lockingVaultContract.staleBlockLag();\n\n  const [token, staleBlockLag] = await Promise.all([\n    tokenPromise,\n    staleBlockLagPromise,\n  ]);\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      token,\n      staleBlockLag: staleBlockLag.toNumber(),\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport {\n  ERC20Permit__factory,\n  OptimisticGrants__factory,\n} from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\nimport { OptimisticsGrantsContractInfo } from \"src/types\";\nimport { formatUnits } from \"ethers/lib/utils\";\n\nexport async function getOptimisticGrantsInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<OptimisticsGrantsContractInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n  const optimisticGrantsContract = OptimisticGrants__factory.connect(\n    tokenAddress,\n    provider,\n  );\n\n  const tokenPromise = optimisticGrantsContract.token();\n  const solvencyPromise = optimisticGrantsContract.solvency();\n\n  const [token, solvency] = await Promise.all([tokenPromise, solvencyPromise]);\n  const tokenContract = ERC20Permit__factory.connect(token, provider);\n  const tokenDecimals = await tokenContract.decimals();\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      token,\n      solvency: formatUnits(solvency, tokenDecimals),\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { OptimisticRewards__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\n\nimport { OptimisticRewardsVaultInfo } from \"src/types\";\n\nexport async function getOptimisticRewardsVaultInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<OptimisticRewardsVaultInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n\n  const optimisticRewardsVaultContract = OptimisticRewards__factory.connect(\n    tokenAddress,\n    provider,\n  );\n\n  const pendingRootPromise = optimisticRewardsVaultContract.pendingRoot();\n  const proposalTimePromise = optimisticRewardsVaultContract.proposalTime();\n  const proposerPromise = optimisticRewardsVaultContract.proposer();\n  const challengePeriodPromise =\n    optimisticRewardsVaultContract.challengePeriod();\n  const rewardsRootPromise = optimisticRewardsVaultContract.rewardsRoot();\n  const lockingVaultPromise = optimisticRewardsVaultContract.lockingVault();\n  const tokenPromise = optimisticRewardsVaultContract.token();\n\n  const [\n    pendingRoot,\n    proposalTime,\n    proposer,\n    challengePeriod,\n    rewardsRoot,\n    lockingVault,\n    token,\n  ] = await Promise.all([\n    pendingRootPromise,\n    proposalTimePromise,\n    proposerPromise,\n    challengePeriodPromise,\n    rewardsRootPromise,\n    lockingVaultPromise,\n    tokenPromise,\n  ]);\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      pendingRoot,\n      proposalTime: proposalTime.toNumber(),\n      proposer,\n      challengePeriod: challengePeriod.toNumber(),\n      rewardsRoot,\n      lockingVault,\n      token,\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { Timelock__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\n\nimport { TimelockInfo } from \"src/types\";\n\nexport async function getTimelockInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<TimelockInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n  const timelockContract = Timelock__factory.connect(tokenAddress, provider);\n\n  const waitTime = await timelockContract.waitTime();\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      waitTime: waitTime.toString(),\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { Treasury__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\nimport { TreasuryInfo } from \"src/types\";\n\nexport async function getTreasuryInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n  name: string,\n): Promise<TreasuryInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for \", name, tokenAddress);\n    return;\n  }\n\n  const treasuryContract = Treasury__factory.connect(tokenAddress, provider);\n\n  const owner = await treasuryContract.owner();\n\n  return {\n    chainId,\n    address: tokenAddress,\n    name,\n    decimals: 0,\n    symbol: \"\",\n    extensions: {\n      owner,\n    },\n  };\n}\n","import { Provider } from \"@ethersproject/abstract-provider\";\nimport { TokenInfo } from \"@uniswap/token-lists\";\nimport { ERC20Permit__factory } from \"@elementfi/council-typechain\";\nimport { ethers } from \"ethers\";\n\nexport async function getVotingTokenInfo(\n  provider: Provider,\n  chainId: number,\n  tokenAddress: string,\n): Promise<TokenInfo | undefined> {\n  if (!tokenAddress || tokenAddress === ethers.constants.AddressZero) {\n    console.error(\"Invavlid Token Address for Voting Token\", tokenAddress);\n    return;\n  }\n\n  const tokenContract = ERC20Permit__factory.connect(tokenAddress, provider);\n\n  const name = await tokenContract.name();\n  const symbol = await tokenContract.symbol();\n  const decimals = await tokenContract.decimals();\n\n  return {\n    chainId,\n    address: tokenAddress,\n    symbol,\n    decimals,\n    name,\n  };\n}\n"],"names":[],"version":3,"file":"index.js.map"}