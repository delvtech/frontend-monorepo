import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { DateString, DateStringInterface } from "../../../contracts/libraries/DateString";
declare type DateStringConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DateString__factory extends ContractFactory {
    constructor(...args: DateStringConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DateString>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DateString;
    connect(signer: Signer): DateString__factory;
    static readonly bytecode = "0x6080806040523461001a57610c149081610020823930815050f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c9081634df86126146102015750806374f0314f146101e9578063911e4243146100c0578063a3f144ae146100a8578063da8892ab1461007d5763e95564301461006457600080fd5b816003193601126100795760209051603c8152f35b5080fd5b506020600319360112610079576100a490610099600435610318565b9051918291826102a4565b0390f35b5081600319360112610079576020905162253d8c8152f35b50806003193601126100795767ffffffffffffffff6004358181116101e557366023820112156101e55780600401359182116101d15782519160209061012d827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185610218565b8084528184019236602483830101116101cd5792826100a4976021948461017d99989560246101c399018637850101526101b461016b602435610318565b9287519889955180928588019061026f565b8401917f2d00000000000000000000000000000000000000000000000000000000000000818401528351938491878501910161026f565b01036001810185520183610218565b51918291826102a4565b8680fd5b602484634e487b7160e01b81526041600452fd5b8380fd5b50816003193601126100795760209051620151808152f35b8390816003193601126100795780610e1060209252f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761025957604052565b634e487b7160e01b600052604160045260246000fd5b918091926000905b82821061028f575011610288575050565b6000910152565b91508060209183015181860152018291610277565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604093602084526102e7815180928160208801526020888801910161026f565b0116010190565b60ff168060ff036030116103025760300190565b634e487b7160e01b600052601160045260246000fd5b6201518090047f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8181039160009081811262010bd994808613821516610896577f8000000000000000000000000000000000000000000000000000000000000000958387039283821216610882578490840112917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef427908162253d8c9301831384151661086e5701131661085a576226496501600193600493858382048611858513161661084757857fe000000000000000000000000000000000000000000000000000000000000000841285851216166108475762023ab192838160021b059387858404821187871316166107fb57877fffffc694f94337079d130ab45dff8e0f9ea161331bb1c93dea871de6fec83ce2861287871216166107fb57840285811281840360031381151661080e57818503600312166107fb579086600361048193010590610908565b9084821282820388138115166107fb578284038812166107e857868201610fa0888284048211888413161661080e57887ffff7ced916872b020c49ba5e353f7ced916872b020c49ba5e353f7ced916872c8312888412161661080e5762164b09910205916105b5868413848404821116891661080e57887fffe9924f8d0dd7b2e6f174df9576f9de01c091c8faeb2605f522de8852b47aa88512888612161661080e5790878461053393020590610908565b858112818303601f1381151661080e57818503601f12166107fb57601f019680888304605011878a1316166107fb57807ffe666666666666666666666666666666666666666666666666666666666666678912878a1216166107fb5761098f9788816050020590828285048b1189841316166108345787821299837ffff29be1739a4fb805dbcd5d6c7d1f7d6fd627208942391f124ee1c3f307026884128c161661082157906050836105e893020590610908565b98600b820595828503600213821516610821578290036002121661080e5781858404600c11888713161661080e57817ff5555555555555555555555555555555555555555555555555555555555555568612888712161661080e5761065490600286600c029101610908565b947f80000000000000000000000000000000000000000000000000000000000000318112821661080e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf82910180930460641187841316166107fb577ffeb851eb851eb851eb851eb851eb851eb851eb851eb851eb851eb851eb851eb9821286831216166107e8576106f392916106ee916064026108aa565b6108aa565b937fffffff000000000000000000000000000000000000000000000000000000000061072460ff600a8404166102ee565b95606461075760ff600a7fff000000000000000000000000000000000000000000000000000000000000009606166102ee565b9106926107898161077f60ff600a8361077383838c04166102ee565b60f81b169806166102ee565b60f81b1695610966565b91816040519960f81b1660208a015260f81b1660218801521660228601526025850152602684015260078352604083019183831067ffffffffffffffff8411176107d557505060405290565b906041602492634e487b7160e01b835252fd5b602485601188634e487b7160e01b835252fd5b602486601189634e487b7160e01b835252fd5b60248760118a634e487b7160e01b835252fd5b60248960118c634e487b7160e01b835252fd5b60248860118b634e487b7160e01b835252fd5b602484601187634e487b7160e01b835252fd5b602482634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526011600452fd5b602485634e487b7160e01b81526011600452fd5b602484634e487b7160e01b81526011600452fd5b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831381151661030257817f800000000000000000000000000000000000000000000000000000000000000003831216610302570190565b60008212827f800000000000000000000000000000000000000000000000000000000000000001821281151661030257827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821316610302570390565b6001810361099357507f4a414e000000000000000000000000000000000000000000000000000000000090565b600281036109c057507f464542000000000000000000000000000000000000000000000000000000000090565b600381036109ed57507f4d4152000000000000000000000000000000000000000000000000000000000090565b60048103610a1a57507f415052000000000000000000000000000000000000000000000000000000000090565b60058103610a4757507f4d4159000000000000000000000000000000000000000000000000000000000090565b60068103610a7457507f4a554e000000000000000000000000000000000000000000000000000000000090565b60078103610aa157507f4a554c000000000000000000000000000000000000000000000000000000000090565b60088103610ace57507f415547000000000000000000000000000000000000000000000000000000000090565b60098103610afb57507f534550000000000000000000000000000000000000000000000000000000000090565b600a8103610b2857507f4f4354000000000000000000000000000000000000000000000000000000000090565b600b8103610b5557507f4e4f56000000000000000000000000000000000000000000000000000000000090565b600c03610b80577f444543000000000000000000000000000000000000000000000000000000000090565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f64617465206465636f64696e67206572726f72000000000000000000000000006044820152fdfea2646970667358221220a0ee1a542ff58d1196c9d21d27a4d9686829438de1b635e3d024fe66acadf98164736f6c634300080f0033";
    static readonly abi: {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): DateStringInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DateString;
}
export {};
