"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElementError__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "Authorizable_SenderMustBeAuthorized",
        type: "error",
    },
    {
        inputs: [],
        name: "Authorizable_SenderMustBeOwner",
        type: "error",
    },
    {
        inputs: [],
        name: "BatchInputLengthMismatch",
        type: "error",
    },
    {
        inputs: [],
        name: "ExceededSlippageLimit",
        type: "error",
    },
    {
        inputs: [],
        name: "ExpirationDateMustBeNonZero",
        type: "error",
    },
    {
        inputs: [],
        name: "ExpiredDeadline",
        type: "error",
    },
    {
        inputs: [],
        name: "FixedPointMath_AddOverflow",
        type: "error",
    },
    {
        inputs: [],
        name: "FixedPointMath_InvalidExponent",
        type: "error",
    },
    {
        inputs: [],
        name: "FixedPointMath_NegativeInput",
        type: "error",
    },
    {
        inputs: [],
        name: "FixedPointMath_NegativeOrZeroInput",
        type: "error",
    },
    {
        inputs: [],
        name: "FixedPointMath_SubOverflow",
        type: "error",
    },
    {
        inputs: [],
        name: "InaccurateUnlockShareTrade",
        type: "error",
    },
    {
        inputs: [],
        name: "IncongruentPrincipalAndYieldTokenIds",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidERC20Bridge",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSignature",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidYieldTokenCreation",
        type: "error",
    },
    {
        inputs: [],
        name: "NotAYieldTokenId",
        type: "error",
    },
    {
        inputs: [],
        name: "PoolInitialized",
        type: "error",
    },
    {
        inputs: [],
        name: "PoolNotInitialized",
        type: "error",
    },
    {
        inputs: [],
        name: "RestrictedZeroAddress",
        type: "error",
    },
    {
        inputs: [],
        name: "StartDateMustBeNonZero",
        type: "error",
    },
    {
        inputs: [],
        name: "TWAROracle_BufferAlreadyInitialized",
        type: "error",
    },
    {
        inputs: [],
        name: "TWAROracle_IncorrectBufferLength",
        type: "error",
    },
    {
        inputs: [],
        name: "TWAROracle_IndexOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "TWAROracle_MinTimeStepMustBeNonZero",
        type: "error",
    },
    {
        inputs: [],
        name: "TWAROracle_NotEnoughElements",
        type: "error",
    },
    {
        inputs: [],
        name: "TermExpired",
        type: "error",
    },
    {
        inputs: [],
        name: "TermNotExpired",
        type: "error",
    },
    {
        inputs: [],
        name: "TermNotInitialized",
        type: "error",
    },
    {
        inputs: [],
        name: "TimeStretchMustBeNonZero",
        type: "error",
    },
    {
        inputs: [],
        name: "UnderlyingInMustBeNonZero",
        type: "error",
    },
    {
        inputs: [],
        name: "UnsortedAssetIds",
        type: "error",
    },
    {
        inputs: [],
        name: "VaultShareReserveTooLow",
        type: "error",
    },
];
var _bytecode = "0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202bd54adb22215041e74c5ca447ec59490454c43fb6a354bdee6e47acf402305b64736f6c634300080f0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var ElementError__factory = /** @class */ (function (_super) {
    __extends(ElementError__factory, _super);
    function ElementError__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    ElementError__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ElementError__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ElementError__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ElementError__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ElementError__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ElementError__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ElementError__factory.bytecode = _bytecode;
    ElementError__factory.abi = _abi;
    return ElementError__factory;
}(ethers_1.ContractFactory));
exports.ElementError__factory = ElementError__factory;
