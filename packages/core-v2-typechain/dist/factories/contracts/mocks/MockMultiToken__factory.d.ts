import { Signer, ContractFactory, BytesLike, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MockMultiToken, MockMultiTokenInterface } from "../../../contracts/mocks/MockMultiToken";
declare type MockMultiTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockMultiToken__factory extends ContractFactory {
    constructor(...args: MockMultiTokenConstructorParams);
    deploy(_linkerCodeHash: PromiseOrValue<BytesLike>, _factory: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockMultiToken>;
    getDeployTransaction(_linkerCodeHash: PromiseOrValue<BytesLike>, _factory: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockMultiToken;
    connect(signer: Signer): MockMultiToken__factory;
    static readonly bytecode = "0x60c03461011f576001600160401b039061148090601f38839003908101601f191682019084821183831017610109578083916040958694855283398101031261011f5780516020909101516001600160a01b038116810361011f5760805260a05280518181018181108482111761010957600191602091845282815201603160f81b8152209080519060208201927f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd8452818301524660608301523060808301526080825260a0820193828510908511176101095783905251902060065561135b9081610125823960805181818161025c015261107d015260a05181818161020c01526110ae0152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918262ad800c14610d3b5750816317fad7fc14610c0c5781631c0f12b614610bd857816321ff32a914610b7757816330adf81f14610b3c5781633644e51514610b1d5781633656eec214610ad05781633ec9d49314610a935781634e41a1fb146109a85781634ed2d6ac14610922578163661523b2146106655781637ecebe00146106215781639032c726146103815781639cd241af14610366578163a22cb465146102ac578163bd85b03914610280578163c45a01551461022f578163c905a4b5146101f4578163e44808bc1461015d575063e985e9c51461010057600080fd5b3461015957806003193601126101595760ff8160209361011e610e23565b610126610e4b565b73ffffffffffffffffffffffffffffffffffffffff91821683526002875283832091168252855220549151911615158152f35b5080fd5b8383346101595760a060031936011261015957823561017a610e4b565b90610183610e6e565b6084359273ffffffffffffffffffffffffffffffffffffffff80851685036101f0576101ae84610fe8565b1633036101c8576101c5949596506064359261111e565b51f35b8685517f2aab8bd3000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b505034610159578160031936011261015957602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101595781600319360112610159576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050346102a85760206003193601126102a85760209282913581526001845220549051908152f35b8280fd5b5050346101595780600319360112610159576102c6610e23565b602435801515908181036103625761033490338652600260205273ffffffffffffffffffffffffffffffffffffffff8587209416938487526020528486209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b82519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a351f35b8480fd5b505034610159576101c561037936610ec2565b90339261126c565b9050346102a85760e06003193601126102a85761039c610e23565b6103a4610e4b565b604435801515908181036101f057606435946084359460ff861680960361061d578642116105f55773ffffffffffffffffffffffffffffffffffffffff8091169586156105cd57600654878b528960209760078952818d20549a858351928c8c8501957f9319a49e677b4f5aede521541bd9c2c7d0f3529998213c5c9b41a6bf27579feb8752850152169b8c606084015289608084015260a083015260c082015260c0815260e081019181831067ffffffffffffffff8411176105a15792828a95928f958f90608096610122925282519020916101008101947f190100000000000000000000000000000000000000000000000000000000000086526101028201520152604281526104b581610f7a565b519020908c519182528482015260a4358c82015260c435606082015282805260015afa15610597578590895116036105705750906105677f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193928589526007845287892061052381546112d7565b905585895260028452878920878a5284528789209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b8551908152a351f35b86517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b87513d8a823e3d90fd5b60248e6041897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8289517ff0dd15fd000000000000000000000000000000000000000000000000000000008152fd5b5086517ff87d9271000000000000000000000000000000000000000000000000000000008152fd5b8880fd5b505034610159576020600319360112610159578060209273ffffffffffffffffffffffffffffffffffffffff610655610e23565b1681526007845220549051908152f35b8383346101595760606003193601126101595782359267ffffffffffffffff906024358281116103625761069c9036908301610ef9565b6044969196358481116101f0576106b69036908501610ef9565b939092808852602092828452878920908781116108f657806106d88354610f27565b9b601f9c8d81116108aa575b508b908d8311600114610845578c9261083a575b50506000198260011b9260031b1c19161790555b87526005825285872094841161080e57506107278454610f27565b8781116107ce575b508596831160011461076a5750948495829394959261075f575b50506000198260011b9260031b1c191617905551f35b013590508580610749565b90601f198316968487528287209287905b8982106107b6575050836001959697981061079c575b505050811b01905551f35b60001960f88560031b161c19910135169055858080610791565b8060018496829495870135815501950192019061077b565b8487528187208880860160051c820192848710610805575b0160051c01905b8181106107fa575061072f565b8781556001016107ed565b925081926107e6565b8660416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b013590508c806106f8565b9091601f191691848d52878d20928d5b8982821061089457505090846001959493921061087a575b505050811b01905561070c565b60001960f88560031b161c199101351690558c808061086d565b6001849682939587013581550195019201610855565b909150838c52868c208d80850160051c8201928986106108ed575b9085949392910160051c01905b8181106108df57506106e4565b8d81558493506001016108d2565b925081926108c5565b60248a6041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9050346102a85760806003193601126102a857803561093f610e4b565b6064359273ffffffffffffffffffffffffffffffffffffffff80851685036101f05761096a84610fe8565b1633036109815750906101c592916044359161126c565b84517f2aab8bd3000000000000000000000000000000000000000000000000000000008152fd5b919050346102a85760209182600319360112610a8f573583526005825280832091815192848154906109d982610f27565b80875292600192808416908115610a4d5750600114610a12575b610a0e8787610a04828c0383610fc5565b5191829182610dcb565b0390f35b9080949750528583205b828410610a3a5750505082610a0e94610a04928201019438806109f3565b8054868501880152928601928101610a1c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168887015250505050151560051b8301019250610a0482610a0e38806109f3565b8380fd5b50503461015957610aa336610ec2565b9184528360205273ffffffffffffffffffffffffffffffffffffffff838520911684526020528183205551f35b9050346102a857816003193601126102a8576020928291610aef610e4b565b9035825281855273ffffffffffffffffffffffffffffffffffffffff83832091168252845220549051908152f35b5050346101595781600319360112610159576020906006549051908152f35b505034610159578160031936011261015957602090517f9319a49e677b4f5aede521541bd9c2c7d0f3529998213c5c9b41a6bf27579feb8152f35b9050346102a85760606003193601126102a8576020928291610b97610e4b565b610b9f610e6e565b913583526003865283832073ffffffffffffffffffffffffffffffffffffffff8092168452865283832091168252845220549051908152f35b9050346102a85760806003193601126102a8576101c590610bf7610e4b565b90610c00610e6e565b3392606435923561111e565b9050346102a85760806003193601126102a857610c27610e23565b90610c30610e4b565b67ffffffffffffffff92906044358481116101f057610c529036908501610e91565b929094606435908111610d3757610c6c9036908601610e91565b93909473ffffffffffffffffffffffffffffffffffffffff80841615908115610d2c575b50610d0557848203610cde5750875b818110610cab57888851f35b80610cd487610cbe610cd994868c6112e6565b358787610ccd868c33966112e6565b359261111e565b6112d7565b610c9f565b87517fba430d38000000000000000000000000000000000000000000000000000000008152fd5b87517ff0dd15fd000000000000000000000000000000000000000000000000000000008152fd5b905084161538610c90565b8780fd5b92915034610a8f576020908160031936011261036257803585528152818420805485610d6682610f27565b80875292600192808416908115610a4d5750600114610d9057610a0e8787610a04828c0383610fc5565b9080949750528583205b828410610db85750505082610a0e94610a04928201019438806109f3565b8054868501880152928601928101610d9a565b919091602080825283519081818401526000945b828610610e0d575050601f81601f19926040959611610e00575b0116010190565b6000858286010152610df9565b8581018201518487016040015294810194610ddf565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610e4657565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610e4657565b6044359073ffffffffffffffffffffffffffffffffffffffff82168203610e4657565b9181601f84011215610e465782359167ffffffffffffffff8311610e46576020808501948460051b010111610e4657565b6003196060910112610e46576004359060243573ffffffffffffffffffffffffffffffffffffffff81168103610e46579060443590565b9181601f84011215610e465782359167ffffffffffffffff8311610e465760208381860195010111610e4657565b90600182811c92168015610f70575b6020831014610f4157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610f36565b6080810190811067ffffffffffffffff821117610f9657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff821117610f9657604052565b60405160208101913083526040820152604081526060810181811067ffffffffffffffff821117610f965773ffffffffffffffffffffffffffffffffffffffff9281604052825190209160808101927fff0000000000000000000000000000000000000000000000000000000000000084527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166081830152609582015260b57f0000000000000000000000000000000000000000000000000000000000000000910152605581526110dd81610f7a565b5190201690565b8181106110ef570390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9392919373ffffffffffffffffffffffffffffffffffffffff808093169416928484036111ef575b6000828152806020526040938482208783526020528482206111698482546110e4565b90558382528160205284822097169687825260205283812090815490831982116111c2575082019055825191825260208201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629190a4565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b600085815260209060028252604091828220878352815260ff83832054161561121b575b505050611146565b8482526003815282822088835281528282208783528152600019838320540315611213578482526003815282822088835281528282209087835252206112628282546110e4565b9055388080611213565b827f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592949360406020936000908152600385528181209673ffffffffffffffffffffffffffffffffffffffff80911697888352865282822098169788825285522055604051908152a3565b60001981146110ef5760010190565b91908110156112f65760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212208f767904b1a0d2a09aa05c8eced4a754de9e838c6d092ffe32e65f6addbe878c64736f6c634300080f0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        anonymous?: undefined;
        outputs?: undefined;
    } | {
        inputs: never[];
        name: string;
        type: string;
        stateMutability?: undefined;
        anonymous?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): MockMultiTokenInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockMultiToken;
}
export {};
