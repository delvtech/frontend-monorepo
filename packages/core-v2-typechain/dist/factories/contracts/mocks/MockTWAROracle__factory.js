"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockTWAROracle__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "metadata",
                type: "uint256",
            },
        ],
        name: "UpdateBuffer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bufferId",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "timeInSeconds",
                type: "uint32",
            },
        ],
        name: "calculateAverageWeightedValue",
        outputs: [
            {
                internalType: "uint256",
                name: "averageWeightedValue",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bufferId",
                type: "uint256",
            },
            {
                internalType: "uint16",
                name: "maxTime",
                type: "uint16",
            },
            {
                internalType: "uint16",
                name: "maxLength",
                type: "uint16",
            },
        ],
        name: "initializeBuffer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bufferId",
                type: "uint256",
            },
        ],
        name: "readMetadataParsed",
        outputs: [
            {
                internalType: "uint32",
                name: "minTimeStep",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "timeStamp",
                type: "uint32",
            },
            {
                internalType: "uint16",
                name: "headIndex",
                type: "uint16",
            },
            {
                internalType: "uint16",
                name: "maxLength",
                type: "uint16",
            },
            {
                internalType: "uint16",
                name: "bufferLength",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bufferId",
                type: "uint256",
            },
            {
                internalType: "uint16",
                name: "index",
                type: "uint16",
            },
        ],
        name: "readSumAndTimeStampForPool",
        outputs: [
            {
                internalType: "uint32",
                name: "timeStamp",
                type: "uint32",
            },
            {
                internalType: "uint224",
                name: "cumulativeSum",
                type: "uint224",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bufferId",
                type: "uint256",
            },
            {
                internalType: "uint224",
                name: "price",
                type: "uint224",
            },
        ],
        name: "updateBuffer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x6080806040523461001657610bb1908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b6000803560e01c806362549f281461035557806372f1b5fc14610309578063763d768d146102d0578063c646c13c146100b05763fe2f3f161461005657600080fd5b346100ad57826003193601126100ad57506100977bffffffffffffffffffffffffffffffffffffffffffffffffffffffff916100906103d6565b9035610433565b63ffffffff849392935193168352166020820152f35b80fd5b509190346102cc5760606003193601126102cc5780356100ce6103d6565b906044359161ffff808416918285036102c857600183111561026b578161012485600052600060205260406000205461ffff80821690808360101c16908360201c169163ffffffff808560301c169460501c1694565b50925050501661020e5782156101e257160492600163ffffffff85161061018557509063ffff00009185528460205260101b16906dffffffff0000000000000000000069ffffffff0000000000004260301b169160501b1617178183205551f35b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f6d696e696d756d2074696d6520737465702069732031000000000000000000006044820152fd5b6024886012887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b60648660208951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f62756666657220616c726561647920696e697469616c697a65640000000000006044820152fd5b60648660208951917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600f60248201527f6d696e206c656e677468206973203100000000000000000000000000000000006044820152fd5b8780fd5b8280fd5b509190346102cc57816003193601126102cc576024359263ffffffff841684036100ad5750602092610302913561065b565b9051908152f35b509190346102cc57816003193601126102cc576024357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff811681036103515761034e913561094a565b51f35b8380fd5b508290346100ad5760206003193601126100ad57506103a660a09235600052600060205260406000205461ffff80821690808360101c16908360201c169163ffffffff808560301c169460501c1694565b92949384519563ffffffff809216875216602086015261ffff938480931690860152166060840152166080820152f35b6024359061ffff821682036103e757565b600080fd5b80548210156104045760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9061046d82600052600060205260406000205461ffff80821690808360101c16908360201c169163ffffffff808560301c169460501c1694565b935050505061ffff80911690821610156104c45761049791600052600060205260406000206103ec565b90549060031b1c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff81169060e01c91565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e646578206f7574206f6620626f756e6473000000000000000000000000006044820152fd5b61ffff1661fffe81116105355760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9061ffff80911691821561057757160690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b818110610535570390565b61ffff1660018110610535577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9182169116818110610535570390565b63ffffffff9182169116818110610535570390565b907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80911691821561057757160490565b8115610577570490565b61069481600052600060205260406000205461ffff80821690808360101c16908360201c169163ffffffff808560301c169460501c1694565b92509492509261ffff80921690600191828111156108ec57600090878516036108e657506106ca866106c587610522565b610564565b945b6106dd63ffffffff809616426105a6565b916106e88282610433565b989097889684916000978a8c16968789116108855750805b61081e575b5082821691160361075657505050505061075293929161074561074b927bffffffffffffffffffffffffffffffffffffffffffffffffffffffff976105e2565b9361060f565b1690610624565b1690565b610773939850906106c561076d929a98959a610522565b90610433565b9190816107a27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808096169616866105a6565b9116946107af89876105a6565b90827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821183151516610535576107fe966107f7946107f09216906105a6565b9102610651565b93166105a6565b91811983116105355761081b93610814916105a6565b9101610651565b90565b989097878b8395949516101580610877575b1561086c57505080821661085d5750610848826105b1565b905b6108548285610433565b97909880610700565b610866906105b1565b9061084a565b979098929192610705565b508389168484161415610830565b929150506107529a9998507bffffffffffffffffffffffffffffffffffffffffffffffffffffffff9b965061074595506108d59493925061074b97508116156000146108dc575061076d906105b1565b90926105e2565b61076d91506105b1565b946106cc565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6e6f7420656e6f75676820656c656d656e7473000000000000000000000000006044820152fd5b9061098482600052600060205260406000205461ffff80821690808360101c16908360201c169163ffffffff808560301c169460501c1694565b9092959391819063ffffffff958642169761099f8a8a61060f565b888088169116108015610b6f575b610b6357600091825281602052604082209761ffff8096169a8b159a8b15610b25575b906109da9161060f565b167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff80921680830482118115151661053557028116918116808203831161053557879201164260e01b1797600014610b135750506000965b8285168110610af4575b50958594936040969363ffff0000610ab1947fea7c39ed8c4fd0c62d6ec8483ffbdb35a146cc6ab03f84652e7d4837c6f85e609a169260101b169065ffff000000008460201b16906dffffffff0000000000000000000069ffffffff0000000000004260301b169160501b1617171717938481556103ec565b819291549060031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811b9283911b1691191617905582519182526020820152a1565b9295949396905081831461053557959394929392916001016040610a38565b6106c5610b1f92610522565b96610a2e565b93506109da907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff610b52878d6103ec565b90549060031b1c16949091506109d0565b50505050505050505050565b5061ffff8716156109ad56fea2646970667358221220558bbe69bd40948eeea41e8cdbbc05c10b7ca83dc220bc8bf34182aff019570464736f6c634300080f0033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var MockTWAROracle__factory = /** @class */ (function (_super) {
    __extends(MockTWAROracle__factory, _super);
    function MockTWAROracle__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    MockTWAROracle__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    MockTWAROracle__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    MockTWAROracle__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    MockTWAROracle__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    MockTWAROracle__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    MockTWAROracle__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    MockTWAROracle__factory.bytecode = _bytecode;
    MockTWAROracle__factory.abi = _abi;
    return MockTWAROracle__factory;
}(ethers_1.ContractFactory));
exports.MockTWAROracle__factory = MockTWAROracle__factory;
