import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MockYieldSpaceMath, MockYieldSpaceMathInterface } from "../../../contracts/mocks/MockYieldSpaceMath";
declare type MockYieldSpaceMathConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockYieldSpaceMath__factory extends ContractFactory {
    constructor(...args: MockYieldSpaceMathConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockYieldSpaceMath>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockYieldSpaceMath;
    connect(signer: Signer): MockYieldSpaceMath__factory;
    static readonly bytecode = "0x608080604052346100165761075c908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c6347ca9d5e1461002a57600080fd5b346101f7576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f757600435906064359260e435906101043580151581036101f75761008160843560a4356102a5565b90670de0b6b3a7640000948583116101cf57508185106101a257818503936100ab8160c4356102cb565b906100ba6044356024356101fb565b986100ea6100da6100d4896100cf8d876102a5565b6102ed565b856102a5565b6100e4898d6102ed565b906101fb565b9315610152579161010f876100cf6101159461010f61011b989760019b9c9d9e6101fb565b906102a5565b90610269565b941415161561014f575091610115610147926020946ec097ce7bc90715b34b9f100000000004906102ed565b604051908152f35b80fd5b60019493610115886100cf61016d9461017297969d9e6101fb565b6102cb565b941415161561014f57506101479261016d60209593610115936ec097ce7bc90715b34b9f100000000004906102ed565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b807f35ba14400000000000000000000000000000000000000000000000000000000060049252fd5b5080fd5b908019821161023a5781019081106102105790565b60046040517f2d59cfbd000000000000000000000000000000000000000000000000000000008152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80821161027b5781811061023a570390565b60046040517f35ba1440000000000000000000000000000000000000000000000000000000008152fd5b8181029181830414901517600116156102c657670de0b6b3a7640000900490565b600080fd5b670de0b6b3a764000090818102918183041490151782151516156102c6570490565b6000811261055157806fffffffffffffffffffffffffffffffff1060071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff1060031b1781811c600f1060021b1781811c60031060011b1781811c60011017906060908183609f03011b609f1c917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302918080808080806c465772b2bbbb5f824b15207a30810102871d6d0388eaa27412d5aca026815d636e0102861d6d0df99ac502031bf953eff472fdcc0102851d6d13cdffb29d51d99322bdff5f22110102841d6d0a0f742023def783a307a986912e0102831d6d01920d8043ca89b5239253284e420102821d6c0b7a86d7375468fac667a0a527019181808080806c29508e458543d8aa4df2abee78810102851d6d0139601a2efabe717e604cbb48940102841d6d02247f7a7b6594320649aa03aba10102831d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc90102821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f0102901d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f83201027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a550602017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d02670de0b6b3a7640000900561054e9061057b565b90565b60046040517f2c7949f5000000000000000000000000000000000000000000000000000000008152fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c181131561072057680755bf798b4a1bf1e58112156106f6576503782dace9d990604e1b0574029d9dc38563c32e5c2f6dc192ee70ef65f9978af36bb17217f7d1cf79abc9e3b3989179d835ebba824c98fb31b83b2ca45c0000000000000000000000006060916b8000000000000000000000008582851b0501831d94850290036d624dcbeb5e25df590e409325888a6dcf3c27b2e487711b467e90f19320826c09791803c2923d5d9721c3da80810102851d6d29c9ad45cc0beb0a2ff097a7bab46d019dd9374d4315c8464a395fc09882017fffffffffffffffffffffffffffffffffffffffe400ce74ed9455bc9156515002860102871d6d2c06887d92262d378b9593af3534810192010102851d0193826d13aaae3ba38de06adc25ebfacc09816d022f98fbc368092c79210d196fa0816c22fcd1cffa6fa000f6e27eeca0810102851d0102831d0102901d01020105029060c3031c90565b60046040517fdf92cc9d000000000000000000000000000000000000000000000000000000008152fd5b5060009056fea26469706673582212204084bbc89f5d587efe46f3e6fc892ed867721562947e2253c5cf4efd720cb77364736f6c634300080f0033";
    static readonly abi: ({
        inputs: never[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): MockYieldSpaceMathInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockYieldSpaceMath;
}
export {};
