"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalancerHelpers__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "minAmountsOut",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.ExitPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620017eb380380620017eb83398181016040528101906200003791906200015d565b8073ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200007e57600080fd5b505afa15801562000093573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b9919062000189565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000245565b600081519050620001408162000211565b92915050565b60008151905062000157816200022b565b92915050565b6000602082840312156200017057600080fd5b600062000180848285016200012f565b91505092915050565b6000602082840312156200019c57600080fd5b6000620001ac8482850162000146565b91505092915050565b6000620001c282620001f1565b9050919050565b6000620001d682620001b5565b9050919050565b6000620001ea82620001b5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200021c81620001c9565b81146200022857600080fd5b50565b6200023681620001dd565b81146200024257600080fd5b50565b60805160601c60a05160601c611564620002876000398060ce52806101915280610369528061042c52806105fe528061063452508061095652506115646000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639ebbf05d14610046578063c7b2c52c14610077578063fbfa77cf146100a8575b600080fd5b610060600480360381019061005b9190610f5a565b6100c6565b60405161006e929190611228565b60405180910390f35b610091600480360381019061008c9190610edf565b610361565b60405161009f929190611228565b60405180910390f35b6100b06105fc565b6040516100bd919061120d565b60405180910390f35b6000606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f6c00927886040518263ffffffff1660e01b81526004016101259190611175565b604080518083038186803b15801561013c57600080fd5b505afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101749190610e24565b50905060606000610189898760000151610620565b9150915060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2946c2b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f557600080fd5b505afa158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d9190610fd5565b90508373ffffffffffffffffffffffffffffffffffffffff166387ec68178b8b8b87878773ffffffffffffffffffffffffffffffffffffffff166355c676286040518163ffffffff1660e01b815260040160206040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610ffe565b8e604001516040518863ffffffff1660e01b81526004016102f59796959493929190611190565b600060405180830381600087803b15801561030f57600080fd5b505af1158015610323573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061034c9190611027565b80965081975050505050505094509492505050565b6000606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f6c00927886040518263ffffffff1660e01b81526004016103c09190611175565b604080518083038186803b1580156103d757600080fd5b505afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190610e24565b50905060606000610424898760000151610620565b9150915060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d2946c2b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190610fd5565b90508373ffffffffffffffffffffffffffffffffffffffff16636028bfd48b8b8b87878773ffffffffffffffffffffffffffffffffffffffff166355c676286040518163ffffffff1660e01b815260040160206040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610ffe565b8e604001516040518863ffffffff1660e01b81526004016105909796959493929190611190565b600060405180830381600087803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105e79190611027565b80965081975050505050505094509492505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060006060806106308561077f565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f94d4668876040518263ffffffff1660e01b815260040161068b9190611175565b60006040518083038186803b1580156106a357600080fd5b505afa1580156106b7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106e09190610e60565b8095508196508294505050506106f88251825161084f565b60005b825181101561077557600083828151811061071257fe5b6020026020010151905061076983838151811061072b57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610208610860565b508060010190506106fb565b5050509250929050565b606080825167ffffffffffffffff8111801561079a57600080fd5b506040519080825280602002602001820160405280156107c95781602001602082028036833780820191505090505b50905060005b8351811015610845576107f48482815181106107e757fe5b6020026020010151610873565b82828151811061080057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508060010190506107cf565b5080915050919050565b61085c8183146067610860565b5050565b8161086f5761086e816108a0565b5b5050565b600061087e82610910565b6108905761088b82610948565b610899565b610898610952565b5b9050919050565b6030600a820601600a820491506030600a830601600a830492506030600a8406018060101b8260081b8401016642414c230000000160c81b7f08c379a000000000000000000000000000000000000000000000000000000000600052602060045260076024528060445260646000fd5b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000819050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000813590506109898161147d565b92915050565b60008151905061099e8161147d565b92915050565b600082601f8301126109b557600080fd5b81356109c86109c382611285565b611258565b915081818352602084019350602081019050838560208402820111156109ed57600080fd5b60005b83811015610a1d5781610a038882610c2e565b8452602084019350602083019250506001810190506109f0565b5050505092915050565b600082601f830112610a3857600080fd5b8151610a4b610a46826112ad565b611258565b91508181835260208401935060208101905083856020840282011115610a7057600080fd5b60005b83811015610aa05781610a868882610c43565b845260208401935060208301925050600181019050610a73565b5050505092915050565b600082601f830112610abb57600080fd5b8135610ace610ac9826112d5565b611258565b91508181835260208401935060208101905083856020840282011115610af357600080fd5b60005b83811015610b235781610b098882610dfa565b845260208401935060208301925050600181019050610af6565b5050505092915050565b600082601f830112610b3e57600080fd5b8151610b51610b4c826112d5565b611258565b91508181835260208401935060208101905083856020840282011115610b7657600080fd5b60005b83811015610ba65781610b8c8882610e0f565b845260208401935060208301925050600181019050610b79565b5050505092915050565b600081359050610bbf81611494565b92915050565b600081359050610bd4816114ab565b92915050565b600082601f830112610beb57600080fd5b8135610bfe610bf9826112fd565b611258565b91508082526020830160208301858383011115610c1a57600080fd5b610c2583828461142a565b50505092915050565b600081359050610c3d816114c2565b92915050565b600081519050610c52816114d9565b92915050565b600081519050610c67816114f0565b92915050565b600081519050610c7c81611507565b92915050565b600060808284031215610c9457600080fd5b610c9e6080611258565b9050600082013567ffffffffffffffff811115610cba57600080fd5b610cc6848285016109a4565b600083015250602082013567ffffffffffffffff811115610ce657600080fd5b610cf284828501610aaa565b602083015250604082013567ffffffffffffffff811115610d1257600080fd5b610d1e84828501610bda565b6040830152506060610d3284828501610bb0565b60608301525092915050565b600060808284031215610d5057600080fd5b610d5a6080611258565b9050600082013567ffffffffffffffff811115610d7657600080fd5b610d82848285016109a4565b600083015250602082013567ffffffffffffffff811115610da257600080fd5b610dae84828501610aaa565b602083015250604082013567ffffffffffffffff811115610dce57600080fd5b610dda84828501610bda565b6040830152506060610dee84828501610bb0565b60608301525092915050565b600081359050610e0981611517565b92915050565b600081519050610e1e81611517565b92915050565b60008060408385031215610e3757600080fd5b6000610e458582860161098f565b9250506020610e5685828601610c6d565b9150509250929050565b600080600060608486031215610e7557600080fd5b600084015167ffffffffffffffff811115610e8f57600080fd5b610e9b86828701610a27565b935050602084015167ffffffffffffffff811115610eb857600080fd5b610ec486828701610b2d565b9250506040610ed586828701610e0f565b9150509250925092565b60008060008060808587031215610ef557600080fd5b6000610f0387828801610bc5565b9450506020610f148782880161097a565b9350506040610f258782880161097a565b925050606085013567ffffffffffffffff811115610f4257600080fd5b610f4e87828801610c82565b91505092959194509250565b60008060008060808587031215610f7057600080fd5b6000610f7e87828801610bc5565b9450506020610f8f8782880161097a565b9350506040610fa08782880161097a565b925050606085013567ffffffffffffffff811115610fbd57600080fd5b610fc987828801610d3e565b91505092959194509250565b600060208284031215610fe757600080fd5b6000610ff584828501610c58565b91505092915050565b60006020828403121561101057600080fd5b600061101e84828501610e0f565b91505092915050565b6000806040838503121561103a57600080fd5b600061104885828601610e0f565b925050602083015167ffffffffffffffff81111561106557600080fd5b61107185828601610b2d565b9150509250929050565b60006110878383611157565b60208301905092915050565b61109c8161137e565b82525050565b60006110ad82611339565b6110b7818561135c565b93506110c283611329565b8060005b838110156110f35781516110da888261107b565b97506110e58361134f565b9250506001810190506110c6565b5085935050505092915050565b6111098161139c565b82525050565b600061111a82611344565b611124818561136d565b9350611134818560208601611439565b61113d8161146c565b840191505092915050565b61115181611406565b82525050565b611160816113fc565b82525050565b61116f816113fc565b82525050565b600060208201905061118a6000830184611100565b92915050565b600060e0820190506111a5600083018a611100565b6111b26020830189611093565b6111bf6040830188611093565b81810360608301526111d181876110a2565b90506111e06080830186611166565b6111ed60a0830185611166565b81810360c08301526111ff818461110f565b905098975050505050505050565b60006020820190506112226000830184611148565b92915050565b600060408201905061123d6000830185611166565b818103602083015261124f81846110a2565b90509392505050565b6000604051905081810181811067ffffffffffffffff8211171561127b57600080fd5b8060405250919050565b600067ffffffffffffffff82111561129c57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156112c457600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156112ec57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561131457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611389826113dc565b9050919050565b60008115159050919050565b6000819050919050565b60006113b18261137e565b9050919050565b60006113c38261137e565b9050919050565b60006113d58261137e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061141182611418565b9050919050565b6000611423826113dc565b9050919050565b82818337600083830152505050565b60005b8381101561145757808201518184015260208101905061143c565b83811115611466576000848401525b50505050565b6000601f19601f8301169050919050565b6114868161137e565b811461149157600080fd5b50565b61149d81611390565b81146114a857600080fd5b50565b6114b48161139c565b81146114bf57600080fd5b50565b6114cb816113a6565b81146114d657600080fd5b50565b6114e2816113b8565b81146114ed57600080fd5b50565b6114f9816113ca565b811461150457600080fd5b50565b6003811061151457600080fd5b50565b611520816113fc565b811461152b57600080fd5b5056fea2646970667358221220849d12dca2eab1375ce333073832f51d5c1b6cdf642ee8968e02a438772a809664736f6c63430007010033";
const isSuperArgs = (xs) => xs.length > 1;
class BalancerHelpers__factory extends ethers_1.ContractFactory {
  constructor(...args) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }
  deploy(_vault, overrides) {
    return super.deploy(_vault, overrides || {});
  }
  getDeployTransaction(_vault, overrides) {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static createInterface() {
    return new ethers_1.utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new ethers_1.Contract(address, _abi, signerOrProvider);
  }
}
exports.BalancerHelpers__factory = BalancerHelpers__factory;
BalancerHelpers__factory.bytecode = _bytecode;
BalancerHelpers__factory.abi = _abi;
