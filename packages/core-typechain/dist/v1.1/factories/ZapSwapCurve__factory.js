"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZapSwapCurve__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "__balancer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "spenders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "setApprovalsFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newState",
        type: "bool",
      },
    ],
    name: "setIsFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "balancerPoolId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "principalToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minPtAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "needsChildZap",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapInInfo",
        name: "_info",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "roots",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "parentIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLpAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpIn",
        name: "_zap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "roots",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "parentIdx",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minLpAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpIn",
        name: "_childZap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct ZapSwapCurve.PermitData[]",
        name: "_permitData",
        type: "tuple[]",
      },
    ],
    name: "zapIn",
    outputs: [
      {
        internalType: "uint256",
        name: "ptAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "balancerPoolId",
            type: "bytes32",
          },
          {
            internalType: "contract IAsset",
            name: "principalToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "principalTokenAmount",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minRootTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "targetNeedsChildZap",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapOutInfo",
        name: "_info",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "int128",
            name: "rootTokenIdx",
            type: "int128",
          },
          {
            internalType: "address",
            name: "rootToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "curveRemoveLiqFnIsUint256",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpOut",
        name: "_zap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "curvePool",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "int128",
            name: "rootTokenIdx",
            type: "int128",
          },
          {
            internalType: "address",
            name: "rootToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "curveRemoveLiqFnIsUint256",
            type: "bool",
          },
        ],
        internalType: "struct ZapSwapCurve.ZapCurveLpOut",
        name: "_childZap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IERC20Permit",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct ZapSwapCurve.PermitData[]",
        name: "_permitData",
        type: "tuple[]",
      },
    ],
    name: "zapOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];
const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003af538038062003af583398181016040528101906200003791906200015a565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016002819055506200009033620000e960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600360006101000a81548160ff02191690831515021790555050620001e8565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000815190506200015481620001ce565b92915050565b6000602082840312156200016d57600080fd5b60006200017d8482850162000143565b91505092915050565b60006200019382620001ae565b9050919050565b6000620001a78262000186565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001d9816200019a565b8114620001e557600080fd5b50565b60805160601c6138e76200020e600039600081816105bc0152610cbe01526138e76000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b14610182578063b6a5d7de146101ad578063b9181611146101d6578063c24bca0114610213578063e5355a221461023c578063fe9fbb801461026c576100a7565b806313af4035146100ac57806327c97fa5146100d557806333eeb147146100fe57806364eda74b146101295780636a978af614610152576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190612709565b6102a9565b005b3480156100e157600080fd5b506100fc60048036038101906100f79190612709565b61037a565b005b34801561010a57600080fd5b50610113610463565b6040516101209190613128565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b91906127c9565b610476565b005b61016c600480360381019061016791906128c8565b6104db565b6040516101799190613311565b60405180910390f35b34801561018e57600080fd5b50610197610807565b6040516101a49190612fc3565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf9190612709565b61082b565b005b3480156101e257600080fd5b506101fd60048036038101906101f89190612709565b6108c5565b60405161020a9190613128565b60405180910390f35b34801561021f57600080fd5b5061023a60048036038101906102359190612732565b6108e5565b005b6102566004803603810190610251919061281b565b610b71565b6040516102639190613311565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190612709565b610eb2565b6040516102a09190613128565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e90613165565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90613165565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600360009054906101000a900460ff1681565b61047f33610eb2565b6104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b590613185565b60405180910390fd5b80600360006101000a81548160ff02191690831515021790555050565b6000600280541415610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990613265565b60405180910390fd5b60028081905550600360009054906101000a900460ff1615610579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057090613245565b60405180910390fd5b8161058381610f08565b6105b833308860400151896020015173ffffffffffffffffffffffffffffffffffffffff16611188909392919063ffffffff16565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352bbbe296040518060c001604052808a60000151815260200160006001811115610645577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018a6020015173ffffffffffffffffffffffffffffffffffffffff168152602001896020015173ffffffffffffffffffffffffffffffffffffffff1681526020018a6040015181526020016040518060400160405280600481526020017f307830300000000000000000000000000000000000000000000000000000000081525081525060405180608001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020013073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152508a608001518b60c001516040518563ffffffff1660e01b815260040161074994939291906132c5565b602060405180830381600087803b15801561076357600080fd5b505af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b9190612947565b90506107d286828960e001516107b5578960a001516107b8565b60005b8a60e001516107cb578a606001516107cd565b305b611211565b92508660e00151156107f5576107f285848960a001518a60600151611211565b92505b50506001600281905550949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090613165565b60405180910390fd5b6108c2816114b4565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b6108ee33610eb2565b61092d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092490613185565b60405180910390fd5b8151835114610971576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610968906131e5565b60405180910390fd5b80518351146109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906131e5565b60405180910390fd5b60005b8351811015610b6b57610a6d8382815181106109fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000868481518110610a40577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1661150e9092919063ffffffff16565b610b58838281518110610aa9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151838381518110610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151868481518110610b2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1661150e9092919063ffffffff16565b8080610b63906136a6565b9150506109b8565b50505050565b6000600280541415610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf90613265565b60405180910390fd5b60028081905550600360009054906101000a900460ff1615610c0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0690613245565b60405180910390fd5b81610c1981610f08565b610c216120c3565b8660a0015115610cae576000610c548660405180606001604052806000815260200160008152602001600081525061166c565b90508082876080015160038110610c94577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201818151610ca591906134ec565b91508181525050505b6000610cba878361166c565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166352bbbe296040518060c001604052808b60000151815260200160006001811115610d47577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018a6020015173ffffffffffffffffffffffffffffffffffffffff1681526020018b6040015173ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016040518060400160405280600481526020017f307830300000000000000000000000000000000000000000000000000000000081525081525060405180608001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020018c6020015173ffffffffffffffffffffffffffffffffffffffff168152602001600015158152508b606001518c608001516040518563ffffffff1660e01b8152600401610e4b94939291906132c5565b602060405180830381600087803b158015610e6557600080fd5b505af1158015610e79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9d9190612947565b93505050506001600281905550949350505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008151146111855760005b815181101561118357818181518110610f56577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1663d505accf33848481518110610fb7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160200151858581518110610ffc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160400151868681518110611041577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160600151878781518110611086577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160c001518888815181106110cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160800151898981518110611110577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160a001516040518863ffffffff1660e01b815260040161113e979695949392919061303e565b600060405180830381600087803b15801561115857600080fd5b505af115801561116c573d6000803e3d6000fd5b50505050808061117b906136a6565b915050610f14565b505b50565b61120b846323b872dd60e01b8585856040516024016111a993929190613007565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611dc4565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614159050600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16876060015173ffffffffffffffffffffffffffffffffffffffff16146112a5576112a08760600151611e8b565b6112a7565b475b905086608001511561133257866000015173ffffffffffffffffffffffffffffffffffffffff1663f1dc3cc9878960400151600f0b886040518463ffffffff1660e01b81526004016112fb93929190613363565b600060405180830381600087803b15801561131557600080fd5b505af1158015611329573d6000803e3d6000fd5b505050506113aa565b866000015173ffffffffffffffffffffffffffffffffffffffff16631a4d01d2878960400151886040518463ffffffff1660e01b81526004016113779392919061332c565b600060405180830381600087803b15801561139157600080fd5b505af11580156113a5573d6000803e3d6000fd5b505050505b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff16876060015173ffffffffffffffffffffffffffffffffffffffff1614156114575780476114029190613542565b92508115611452578373ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015611450573d6000803e3d6000fd5b505b6114aa565b806114658860600151611e8b565b61146f9190613542565b925081156114a9576114a83085858a6060015173ffffffffffffffffffffffffffffffffffffffff16611188909392919063ffffffff16565b5b5b5050949350505050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008114806115a7575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401611555929190612fde565b60206040518083038186803b15801561156d57600080fd5b505afa158015611581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a59190612947565b145b6115e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115dd90613285565b60405180910390fd5b6116678363095ea7b360e01b84846040516024016116059291906130ad565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611dc4565b505050565b60006002836040015151148061168757506003836040015151145b6116c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bd906132a5565b60405180910390fd5b6000805b8460400151518160ff161015611b1c5760008086604001518360ff168151811061171d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151119050808061177457506000858360ff166003811061176d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151115b61177e5782611781565b60015b92508061178e5750611b09565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff1686606001518360ff16815181106117f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156119475785604001518260ff168151811061185d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015134146118a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161189d90613225565b60405180910390fd5b85604001518260ff16815181106118e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151858360ff166003811061192a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020181815161193b91906134ec565b91508181525050611b07565b600061199987606001518460ff168151811061198c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611e8b565b9050611a56333089604001518660ff16815181106119e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518a606001518760ff1681518110611a28577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16611188909392919063ffffffff16565b80611aa788606001518560ff1681518110611a9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151611e8b565b611ab19190613542565b868460ff1660038110611aed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201818151611afe91906134ec565b91508181525050505b505b8080611b14906136ef565b9150506116ca565b5080611b2c576000915050611dbe565b6000611b3b8560200151611e8b565b905060028560400151511415611c5657846000015173ffffffffffffffffffffffffffffffffffffffff16630b4c7e4d34604051806040016040528088600060038110611bb1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815260200188600160038110611bf5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152508860a001516040518463ffffffff1660e01b8152600401611c1f9291906130d6565b6000604051808303818588803b158015611c3857600080fd5b505af1158015611c4c573d6000803e3d6000fd5b5050505050611da1565b846000015173ffffffffffffffffffffffffffffffffffffffff16634515cef334604051806060016040528088600060038110611cbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815260200188600160038110611d00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151815260200188600260038110611d44577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518152508860a001516040518463ffffffff1660e01b8152600401611d6e9291906130ff565b6000604051808303818588803b158015611d8757600080fd5b505af1158015611d9b573d6000803e3d6000fd5b50505050505b80611daf8660200151611e8b565b611db99190613542565b925050505b92915050565b6000611e26826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f1d9092919063ffffffff16565b9050600081511115611e865780806020019051810190611e4691906127f2565b611e85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7c90613205565b60405180910390fd5b5b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611ec69190612fc3565b60206040518083038186803b158015611ede57600080fd5b505afa158015611ef2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f169190612947565b9050919050565b6060611f2c8484600085611f35565b90509392505050565b606082471015611f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f71906131a5565b60405180910390fd5b611f8385612049565b611fc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fb9906131c5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611feb9190612fac565b60006040518083038185875af1925050503d8060008114612028576040519150601f19603f3d011682016040523d82523d6000602084013e61202d565b606091505b509150915061203d82828661205c565b92505050949350505050565b600080823b905060008111915050919050565b6060831561206c578290506120bc565b60008351111561207f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b39190613143565b60405180910390fd5b9392505050565b6040518060600160405280600390602082028036833780820191505090505090565b60006120f86120f3846133cb565b61339a565b9050808382526020820190508285602086028201111561211757600080fd5b60005b85811015612147578161212d8882612229565b84526020840193506020830192505060018101905061211a565b5050509392505050565b600061216461215f846133f7565b61339a565b905080838252602082019050828560e086028201111561218357600080fd5b60005b858110156121b357816121998882612364565b845260208401935060e08301925050600181019050612186565b5050509392505050565b60006121d06121cb84613423565b61339a565b905080838252602082019050828560208602820111156121ef57600080fd5b60005b8581101561221f578161220588826126ca565b8452602084019350602083019250506001810190506121f2565b5050509392505050565b600081359050612238816137cb565b92915050565b60008135905061224d816137e2565b92915050565b600082601f83011261226457600080fd5b81356122748482602086016120e5565b91505092915050565b600082601f83011261228e57600080fd5b813561229e848260208601612151565b91505092915050565b600082601f8301126122b857600080fd5b81356122c88482602086016121bd565b91505092915050565b6000813590506122e0816137f9565b92915050565b6000815190506122f5816137f9565b92915050565b60008135905061230a81613810565b92915050565b60008135905061231f81613827565b92915050565b6000813590506123348161383e565b92915050565b60008135905061234981613855565b92915050565b60008135905061235e8161386c565b92915050565b600060e0828403121561237657600080fd5b61238060e061339a565b9050600061239084828501612325565b60008301525060206123a484828501612229565b60208301525060406123b8848285016126ca565b60408301525060606123cc848285016126ca565b60608301525060806123e0848285016122fb565b60808301525060a06123f4848285016122fb565b60a08301525060c0612408848285016126f4565b60c08301525092915050565b600060c0828403121561242657600080fd5b61243060c061339a565b9050600061244084828501612229565b60008301525060206124548482850161233a565b602083015250604082013567ffffffffffffffff81111561247457600080fd5b612480848285016122a7565b604083015250606082013567ffffffffffffffff8111156124a057600080fd5b6124ac84828501612253565b60608301525060806124c0848285016126ca565b60808301525060a06124d4848285016126ca565b60a08301525092915050565b600060a082840312156124f257600080fd5b6124fc60a061339a565b9050600061250c84828501612229565b60008301525060206125208482850161233a565b60208301525060406125348482850161234f565b604083015250606061254884828501612229565b606083015250608061255c848285016122d1565b60808301525092915050565b600060c0828403121561257a57600080fd5b61258460c061339a565b90506000612594848285016122fb565b60008301525060206125a884828501612229565b60208301525060406125bc84828501612310565b60408301525060606125d0848285016126ca565b60608301525060806125e4848285016126ca565b60808301525060a06125f8848285016122d1565b60a08301525092915050565b6000610100828403121561261757600080fd5b61262261010061339a565b90506000612632848285016122fb565b600083015250602061264684828501612310565b602083015250604061265a848285016126ca565b604083015250606061266e8482850161223e565b6060830152506080612682848285016126ca565b60808301525060a0612696848285016126ca565b60a08301525060c06126aa848285016126ca565b60c08301525060e06126be848285016122d1565b60e08301525092915050565b6000813590506126d981613883565b92915050565b6000815190506126ee81613883565b92915050565b6000813590506127038161389a565b92915050565b60006020828403121561271b57600080fd5b600061272984828501612229565b91505092915050565b60008060006060848603121561274757600080fd5b600084013567ffffffffffffffff81111561276157600080fd5b61276d86828701612253565b935050602084013567ffffffffffffffff81111561278a57600080fd5b61279686828701612253565b925050604084013567ffffffffffffffff8111156127b357600080fd5b6127bf868287016122a7565b9150509250925092565b6000602082840312156127db57600080fd5b60006127e9848285016122d1565b91505092915050565b60006020828403121561280457600080fd5b6000612812848285016122e6565b91505092915050565b600080600080610120858703121561283257600080fd5b600061284087828801612568565b94505060c085013567ffffffffffffffff81111561285d57600080fd5b61286987828801612414565b93505060e085013567ffffffffffffffff81111561288657600080fd5b61289287828801612414565b92505061010085013567ffffffffffffffff8111156128b057600080fd5b6128bc8782880161227d565b91505092959194509250565b60008060008061026085870312156128df57600080fd5b60006128ed87828801612604565b9450506101006128ff878288016124e0565b9350506101a0612911878288016124e0565b92505061024085013567ffffffffffffffff81111561292f57600080fd5b61293b8782880161227d565b91505092959194509250565b60006020828403121561295957600080fd5b6000612967848285016126df565b91505092915050565b600061297c8383612f7f565b60208301905092915050565b61299181613588565b82525050565b6129a081613576565b82525050565b6129af81613576565b82525050565b6129be81613463565b6129c881846134a9565b92506129d38261344f565b8060005b83811015612a045781516129eb8782612970565b96506129f68361348f565b9250506001810190506129d7565b505050505050565b612a158161346e565b612a1f81846134b4565b9250612a2a82613459565b8060005b83811015612a5b578151612a428782612970565b9650612a4d8361349c565b925050600181019050612a2e565b505050505050565b612a6c8161359a565b82525050565b612a7b8161359a565b82525050565b612a8a816135a6565b82525050565b612a99816135a6565b82525050565b6000612aaa82613479565b612ab481856134bf565b9350612ac4818560208601613673565b612acd816137a6565b840191505092915050565b6000612ae382613479565b612aed81856134d0565b9350612afd818560208601613673565b80840191505092915050565b612b128161363d565b82525050565b612b2181613661565b82525050565b612b30816135f9565b82525050565b6000612b4182613484565b612b4b81856134db565b9350612b5b818560208601613673565b612b64816137a6565b840191505092915050565b6000612b7c6010836134db565b91507f53656e646572206e6f74206f776e6572000000000000000000000000000000006000830152602082019050919050565b6000612bbc6015836134db565b91507f53656e646572206e6f7420417574686f72697a656400000000000000000000006000830152602082019050919050565b6000612bfc6026836134db565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c62601d836134db565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000612ca26010836134db565b91507f496e636f7272656374206c656e677468000000000000000000000000000000006000830152602082019050919050565b6000612ce2602a836134db565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000612d48600f836134db565b91507f696e636f72726563742076616c756500000000000000000000000000000000006000830152602082019050919050565b6000612d88600f836134db565b91507f436f6e74726163742066726f7a656e00000000000000000000000000000000006000830152602082019050919050565b6000612dc8601f836134db565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b6000612e086036836134db565b91507f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008301527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006020830152604082019050919050565b6000612e6e601b836134db565b91507f212832203e3d20616d6f756e74732e6c656e677468203c3d20332900000000006000830152602082019050919050565b608082016000820151612eb76000850182612997565b506020820151612eca6020850182612a63565b506040820151612edd6040850182612988565b506060820151612ef06060850182612a63565b50505050565b600060c083016000830151612f0e6000860182612a81565b506020830151612f216020860182612b18565b506040830151612f346040860182612b09565b506060830151612f476060860182612b09565b506080830151612f5a6080860182612f7f565b5060a083015184820360a0860152612f728282612a9f565b9150508091505092915050565b612f8881613626565b82525050565b612f9781613626565b82525050565b612fa681613630565b82525050565b6000612fb88284612ad8565b915081905092915050565b6000602082019050612fd860008301846129a6565b92915050565b6000604082019050612ff360008301856129a6565b61300060208301846129a6565b9392505050565b600060608201905061301c60008301866129a6565b61302960208301856129a6565b6130366040830184612f8e565b949350505050565b600060e082019050613053600083018a6129a6565b61306060208301896129a6565b61306d6040830188612f8e565b61307a6060830187612f8e565b6130876080830186612f9d565b61309460a0830185612a90565b6130a160c0830184612a90565b98975050505050505050565b60006040820190506130c260008301856129a6565b6130cf6020830184612f8e565b9392505050565b60006060820190506130eb60008301856129b5565b6130f86040830184612f8e565b9392505050565b60006080820190506131146000830185612a0c565b6131216060830184612f8e565b9392505050565b600060208201905061313d6000830184612a72565b92915050565b6000602082019050818103600083015261315d8184612b36565b905092915050565b6000602082019050818103600083015261317e81612b6f565b9050919050565b6000602082019050818103600083015261319e81612baf565b9050919050565b600060208201905081810360008301526131be81612bef565b9050919050565b600060208201905081810360008301526131de81612c55565b9050919050565b600060208201905081810360008301526131fe81612c95565b9050919050565b6000602082019050818103600083015261321e81612cd5565b9050919050565b6000602082019050818103600083015261323e81612d3b565b9050919050565b6000602082019050818103600083015261325e81612d7b565b9050919050565b6000602082019050818103600083015261327e81612dbb565b9050919050565b6000602082019050818103600083015261329e81612dfb565b9050919050565b600060208201905081810360008301526132be81612e61565b9050919050565b600060e08201905081810360008301526132df8187612ef6565b90506132ee6020830186612ea1565b6132fb60a0830185612f8e565b61330860c0830184612f8e565b95945050505050565b60006020820190506133266000830184612f8e565b92915050565b60006060820190506133416000830186612f8e565b61334e6020830185612b27565b61335b6040830184612f8e565b949350505050565b60006060820190506133786000830186612f8e565b6133856020830185612f8e565b6133926040830184612f8e565b949350505050565b6000604051905081810181811067ffffffffffffffff821117156133c1576133c0613777565b5b8060405250919050565b600067ffffffffffffffff8211156133e6576133e5613777565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561341257613411613777565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561343e5761343d613777565b5b602082029050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060039050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006134f782613626565b915061350283613626565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561353757613536613719565b5b828201905092915050565b600061354d82613626565b915061355883613626565b92508282101561356b5761356a613719565b5b828203905092915050565b600061358182613606565b9050919050565b600061359382613606565b9050919050565b60008115159050919050565b6000819050919050565b60006135bb82613576565b9050919050565b60006135cd82613576565b9050919050565b60006135df82613576565b9050919050565b60008190506135f4826137b7565b919050565b600081600f0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006136488261364f565b9050919050565b600061365a82613606565b9050919050565b600061366c826135e6565b9050919050565b60005b83811015613691578082015181840152602081019050613676565b838111156136a0576000848401525b50505050565b60006136b182613626565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156136e4576136e3613719565b5b600182019050919050565b60006136fa82613630565b915060ff82141561370e5761370d613719565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b600281106137c8576137c7613748565b5b50565b6137d481613576565b81146137df57600080fd5b50565b6137eb81613588565b81146137f657600080fd5b50565b6138028161359a565b811461380d57600080fd5b50565b613819816135a6565b811461382457600080fd5b50565b613830816135b0565b811461383b57600080fd5b50565b613847816135c2565b811461385257600080fd5b50565b61385e816135d4565b811461386957600080fd5b50565b613875816135f9565b811461388057600080fd5b50565b61388c81613626565b811461389757600080fd5b50565b6138a381613630565b81146138ae57600080fd5b5056fea26469706673582212209cacad314259e194b58dc29eac4688c74f20521c7f4ff46fd9da2c305dfd85c264736f6c63430008000033";
const isSuperArgs = (xs) => xs.length > 1;
class ZapSwapCurve__factory extends ethers_1.ContractFactory {
  constructor(...args) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }
  deploy(__balancer, overrides) {
    return super.deploy(__balancer, overrides || {});
  }
  getDeployTransaction(__balancer, overrides) {
    return super.getDeployTransaction(__balancer, overrides || {});
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static createInterface() {
    return new ethers_1.utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new ethers_1.Contract(address, _abi, signerOrProvider);
  }
}
exports.ZapSwapCurve__factory = ZapSwapCurve__factory;
ZapSwapCurve__factory.bytecode = _bytecode;
ZapSwapCurve__factory.abi = _abi;
