import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBalancerPoolToken,
  MockBalancerPoolTokenInterface,
} from "../MockBalancerPoolToken";
declare type MockBalancerPoolTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;
export declare class MockBalancerPoolToken__factory extends ContractFactory {
  constructor(...args: MockBalancerPoolTokenConstructorParams);
  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & {
      from?: string | Promise<string>;
    },
  ): Promise<MockBalancerPoolToken>;
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & {
      from?: string | Promise<string>;
    },
  ): TransactionRequest;
  attach(address: string): MockBalancerPoolToken;
  connect(signer: Signer): MockBalancerPoolToken__factory;
  static readonly bytecode =
    "";
  static readonly abi: (
    | {
        inputs: {
          internalType: string;
          name: string;
          type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
      }
    | {
        anonymous: boolean;
        inputs: {
          indexed: boolean;
          internalType: string;
          name: string;
          type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
      }
    | {
        inputs: {
          internalType: string;
          name: string;
          type: string;
        }[];
        name: string;
        outputs: {
          internalType: string;
          name: string;
          type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
      }
  )[];
  static createInterface(): MockBalancerPoolTokenInterface;
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockBalancerPoolToken;
}
export {};
